Near the classical limit for isochronism, proton :  ~25 MeV D=36.3640714249
'OBJET'
40.                                 ! rigidity / kG.cm :  B=10k x rho=10cm
2                                   ! Particles listed one-by-one.
1   1
4. 0. 0. 0. 0. 1. 'o'               
1

'PARTICUL'                          ! This is only necessary because we want TOF computation. 
PROTON

'DIPOLE'                            ! Geometry : see Figs. A, B under keyword 'AIMANT'.
0                                   ! IL=2 : store to zgoubi.plt.
90.  64.964449580784678             ! AT/deg; RM/cm : take arbitrarily B0=10kG -> R=BORO/B=64.964449580784cm
45. 10.  0. 0. 0.                    ! ACENT/deg arbitrary; B0/kG; indices.
0. 0.                               ! Entrance face, 
0 0. 0. 0. 0. 0. 0. 0.              ! no fringe fields (B(theta)==constant).
+55. 0. 1.E6  -1.E6  1.E6  1.E6    ! Omga>45 to ensure flying mesh sees B=Const.
0. 0.                               ! Exit face, 
0 0. 0. 0. 0. 0. 0. 0,              ! we do not want fringe fields (B(theta)==constant).
-55. 0. 1.E6  -1.E6  1.E6  1.E6     ! Omga<-45 to ensure flying mesh sees B=Const.
0. 0.                               ! Lateral face, we 
0 0. 0. 0. 0. 0. 0. 0.              ! do not use it in this example.
0. 0. 1.E6  -1.E6  1.E6  1.E6 1E3
 2  10.                             ! IRD(=2, 25 or 4); resol: mesh size=step/resol.                          
 .01                               ! Integration step size /cm.
 2  0. 0. 0. 0.                     ! KPOS; RE/cm; TE/rad; RS; TS.
'FAISCEAU'

'FAISTORE'
 zgoubi.fai 
 1                 ! 'END'

'FIT2'                               ! Find Brho(==p/q) such that R=p/(qB). 
 1    save                              ! One variable : 
 1  35 0   .1                         ! particle's D = Brho/BORO. 
 2   1.1e-10                          ! Two constraints (just Y would be ok htough); requseted penalty.
 3.1 1 2 #End 0. 1. 0               ! Y == Yo, and 
 3   1 3 #End 0. 1. 0               ! T = 0  (as To = 0).

'SYSTEM'
1 
cat zgoubi.FITVALS.out >> zgoubi.FITVALS.out_cat

'REBELOTE'
34 0.1 0 1       
3
OBJET   30 4:70                       ! Find p for 34 additional radius values
OBJET   35 1.:36.3640714249
DIPOLE  60 0.01:1. 

'END'


'REBELOTE'
0 0.1 0 1       ! 34
3
OBJET   30 10:70                       ! Find p for 34 additional radius values
DIPOLE  60 0.001:.1 
DIPOLE  59 1:10 

