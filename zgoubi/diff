--- scaler.f	2017-01-20 15:22:53.000000000 -0500
+++ scaler.f_old	2017-01-20 15:22:28.000000000 -0500
@@ -28,7 +28,7 @@
 
       INCLUDE "C.CDF.H"     ! COMMON/CDF/ IES,LF,LST,NDAT,NRES,NPLT,NFAI,NMAP,NSPN,NLOG
       INCLUDE "C.CONST.H"     ! COMMON/CONST/ CL9,CL ,PI,RAD,DEG,QE ,AMPROT, CM2M
-      PARAMETER (LBLSIZ=10)
+      PARAMETER (LBLSIZ=20)
       INCLUDE 'MXLD.H'
       CHARACTER(LBLSIZ) LABEL
       INCLUDE "C.LABEL.H"     ! COMMON/LABEL/ LABEL(MXL,2)
@@ -47,7 +47,7 @@
 
       CHARACTER(KSIZ) KLEY
 
-      LOGICAL EMPTY, STRCON
+      LOGICAL EMPTY, STRCON, SCALEX
 
       SAVE TIME, ICTIM
       SAVE ARGDP, FACDP, PSYN
@@ -71,7 +71,6 @@
       INTEGER DEBSTR, FINSTR
       LOGICAL OK3
 
-      DOUBLE PRECISION SPLINT
       LOGICAL IDLUNI, OK, OKOPN, OKPRT, OKPRTI
       SAVE OKPRT, OKOPN, LPRT
 
@@ -86,6 +85,7 @@
       SCALER = 1.D0
       CALL SCALI5(
      >            MODSCL,NFAM)
+C      IF(NFAM .GT. MXF ) CALL ENDJOB('Pgm scaler. Need NFAM < ',MXF)
       CALL ZGKLEY(
      >            KLEY)
 C----- Looks whether current kley is registered for scaling (in FAM(KF), when declared in 'SCALING'). 
@@ -100,18 +100,13 @@
  3    CONTINUE
 
       DO KF = KF1, NFAM
- 
+
         IF(KLEY .EQ. FAM(KF)) THEN
 C--------- CURRENT KLEY RECORDED FOR SCALING 
         
-c        write(*,*) ' scaler ',noel,kley,LABEL(NOEL,1),EMPTY(LBF(KF,1))
-c        write(*,*) '        ',noel,'||',LBF(KF,1),'||',scaler
-  
           IF( .NOT. EMPTY(LBF(KF,1)) ) THEN
 C------------ LBF(,1-MLF) has to match current KLEY's label 1 in part or in full
 
-C            DO  KL=1,MLF
-
             KL = 1
             DOWHILE(.NOT. EMPTY(LBF(KF,KL)) .AND. KL.LE.MLF)  
 
@@ -127,12 +122,7 @@
 C               ... either LBF ends with '*' ...
                 IF(  LLBF-1 .GE. 1 ) THEN
                   IF(  LABEL(NOEL,1)(1:LLBF-1)
-     >                      .EQ. LBF(KF,KL)(1:LLBF-1)) THEN
-
-c                       write(*,*) ' goto 2 AAA '
-
-                    GOTO 2
-                  ENDIF
+     >                      .EQ. LBF(KF,KL)(1:LLBF-1)) GOTO 2
                 ELSE
 C Dec 2015. To be checked before release
 CC Means that LBF='*'. Scaling applies to all keywords
@@ -140,12 +130,7 @@
                 ENDIF
                 IF( (LLAB-LLBF+2).GT.0) THEN                 !yann to protect -1 in LABEL table
                    IF(LABEL(NOEL,1)(LLAB-LLBF+2:LLAB)
-     >                  .EQ.LBF(KF,KL)(2:LBFB)) THEN
-
-c                       write(*,*) ' goto 2 BBB '
-
-                      GOTO 2
-                   ENDIF
+     >                  .EQ.LBF(KF,KL)(2:LBFB)) GOTO 2
                 ENDIF
 
               ELSE
@@ -154,14 +139,8 @@
 C Yann, Oct 2014 : commented to allow for multiple scaling "lines/families" to point to the same element.
 C                  ok3 = .false.
 
-c            write(*,*) 'CCC ',noel,LABEL(NOEL,1),LBF(KF,KL),kf,kl
-c                       write(*,*) ' goto 2 CCC '
-
                   GOTO 2
                 ELSE
-
-c                  write(*,*) '        ',noel,LABEL(NOEL,1),LBF(KF,KL)                         
-c                  write(*,*) 'scaler ',scaler,kl,kf
            
                 ENDIF
 
@@ -172,28 +151,19 @@
 
           ELSE
 
-C            IF( EMPTY(LABEL(NOEL,1))) THEN
-
-C             write(*,*) ' scaler ICI ',noel,LABEL(NOEL,1),KF,KF1, NFAM
-Cc                     stop 'ici'
-              GOTO 2
-C            ENDIF
+            GOTO 2
 
           ENDIF
         ENDIF
        
       ENDDO
 
-C                  write(*,*) 'scaler  goto 88 '
-
       GOTO 88
 
  2    CONTINUE
 
-C       write(*,*) 'scaler at 2 ',kf,kf1,nfam
-C       write(*,*) 'scaler at 2 ',noel,LABEL(NOEL,1),LBF(KF,KL),kf,kl
-
 
+C      IF(IFM .EQ. MXSCL) CALL ENDJOB('Pgm scaler. Need IFM < ',MXSCL)
       IFM = IFM + 1
       KFM(IFM) = KF
 
@@ -216,6 +186,8 @@
                 IT2=IT1
               ENDIF  
 
+C       IF(I2 .GT. MXS) CALL ENDJOB('Pgm scaler. Need I2 < ',MXS)
+
               IF( IPASS .GE. IT1 .AND. IPASS .LE. IT2 ) THEN
                 SCALER = SCL(KF,I,1)
                 IF(IT2 .NE. IT1) SCALER= SCALER+ (SCL(KF,I2,1)-SCALER )*
@@ -228,6 +200,16 @@
 
               ENDIF
 
+c                    if(kf.eq.1)
+c               if(noel.eq.452) then 
+c               write(*,fmt='(/,a,1p,e12.4,8(2x,i6))') ' scaler ',scaler, 
+c     >            noel,ipass,kf,kti,mxs,i2,it1,it2
+c                 write(*,fmt='(8(2x,i6))') 
+c     >            IT1,NINT(TIM(KF,I)),KF,I,i2,it2
+C                   stop ' SBR scaler -  TESTS'
+c               endif
+
+
             ELSEIF((MODSCL(KF) .EQ. 10) .OR.
      >             (MODSCL(KF) .EQ. 11)) THEN
 
@@ -244,6 +226,7 @@
 C              write(66,*) kf, bro, dpref, xt1,xt2
               IF( BRO .GE. XT1 .AND. BRO .LE. XT2 ) THEN
 
+C        IF(I .GT. MXS) CALL ENDJOB('Pgm scaler. Need I2 < ',MXS)
                 SCALER = SCL(KF,I,1)
                 IF(XT2 .NE. XT1) SCALER= SCALER+ (SCL(KF,I2,1)- SCALER)*
      >                 ( BRO - XT1 ) / (XT2 - XT1)
@@ -267,6 +250,8 @@
 c                      write(66,*) ' scaler SCL2(KF,IT) ',SCL2(KF,IT)
 c                      write(66,*) ' scaler ',BRO,YT1 ,YT2 
 
+C         IF(IT .GT. MXD) CALL ENDJOB('Pgm scaler. Need IT < ',MXD)
+
                     IF( BRO .GE. YT1 .AND. BRO .LE. YT2 ) THEN
                       SCAL2 = SCL2(KF,IT)
                       IF(YT2 .NE. YT1) SCAL2= SCAL2+ 
@@ -282,16 +267,10 @@
 
                 ENDIF
 
-c                    if(kf.eq.1)
-cC                     if(noel.eq.17)
-c     >               write(66,*) ' scaler ',scaler, 
-c     >               scal2,scaler*scal2, BRO,yt1,yt2,kf,it
-c                     stop ' SBR scaler -  TESTS'
-
                 GOTO 88
               ENDIF
             ELSEIF(MODSCL(KF) .EQ. 12  ) THEN
-               SCALER = 1.d0
+               SCALER = 1.D0
 
             ELSEIF(MODSCL(KF) .EQ. 13  ) THEN
                XT1=TIM(KF,I)
@@ -302,14 +281,13 @@
                   I2 = I
                   XT2=XT1
                ENDIF  
-               CALL CAVIT3(STIME)
+               CALL CAVIT3(
+     >                     STIME)
             
              
                IF( STIME .GE. XT1 .AND. STIME .LE. XT2 ) THEN
                   SCALER = SCL(KF,I,1)
 
-
-
                   IF(XT2 .NE. XT1) SCALER= SCALER+ (SCL(KF,I2,1)
      >                 - SCALER)*( STIME - XT1 ) / (XT2 - XT1)
                GOTO 88
@@ -325,7 +303,7 @@
 c          call cavit1(
 c     >                PP0,GAMMA,dWs)
 c          scaler = SCL(KF,1) * pp0
-          scaler = SCL(KF,1,1) * dpref
+          SCALER = SCL(KF,1,1) * DPREF
             
         ELSEIF(KTI .EQ. -2) THEN
 C--------- Field law for scaling FFAG, LPSC, Sept. 2007
@@ -335,8 +313,8 @@
 C                         time   phase
           SCALER = CUBSPL(XM,    YM,    XV,ND,NFRQ)
 C                         
-          IF(NFRQ.GT.ND) CALL ENDJOB(' SBR SCALER, too many data. '
-     >    //'Max allowed is ND = ',ND)
+          IF(NFRQ.GT.ND) CALL ENDJOB(' SBR SCALER, too many data '
+     >    //'sent to cubspl. Max allowed is ND = ',ND)
 
           XV = EKIN
 C                          ekin freq
@@ -377,12 +355,13 @@
 C     >            ' SBR SCALER :   TIME, SCALER, p/p0, IPASS, NOEL'
           ENDIF
 
-        ELSEIF(KTI .EQ. -88) THEN
-C-------- Field law AC dipole for Mei, Delta-Airlines, 2nd Oct. 2009
-          PHAS = SCL(KF,1,1)
-          Q1   = SCL(KF,2,1)
-          Q2   = SCL(KF,3,1)
-          PP   = SCL(KF,4,1)
+        ELSEIF(KTI .EQ. -89) THEN
+C-------- Field law AC dipole for Kiel / booster
+          PHAS = SCL(KF,2,1)
+          Q1   = SCL(KF,3,1)
+          Q2   = SCL(KF,4,1)
+          PP   = SCL(KF,5,1)
+          BSC   = SCL(KF,1,1) 
           RAMPN = TIM(KF,1)
           FLATN = TIM(KF,2)
           DOWNN = TIM(KF,3)
@@ -394,25 +373,23 @@
             ELSEIF(IPASS .GT. RAMPN .AND. IPASS .LE. RAMPN+FLATN) THEN
               SCALER = 1.D0
               QN = Q1+(Q2-Q1) * (DBLIP-RAMPN)/FLATN
-            ELSEIF(IPASS .GT. RAMPN+FLATN .AND. 
+            ELSEIF(IPASS .GT. RAMPN+FLATN .AND.
      >                              IPASS .LE. RAMPN+FLATN+DOWNN) THEN
               SCALER = (RAMPN+FLATN+DOWNN-DBLIP)/DOWNN
               QN = Q2
             ENDIF
-            SCALER = SCALER  * COS(2.D0*PP*DBLIP*QN + PHAS)
+            SCALER = BSC * SCALER  * COS(2.D0*PP*DBLIP*QN + PHAS)
           ELSEIF(IPASS .GT. RAMPN+FLATN+DOWNN) THEN
             SCALER = 0.D0
           ENDIF
 C          write(88,*) ' scaler ',IPASS,scaler,NINT(RAMPN+FLATN+DOWNN)
 
-
-        ELSEIF(KTI .EQ. -89) THEN
+        ELSEIF(KTI .EQ. -88) THEN
 C-------- Field law AC dipole for Mei, Delta-Airlines, 2nd Oct. 2009
-          PHAS = SCL(KF,2,1)
-          Q1   = SCL(KF,3,1)
-          Q2   = SCL(KF,4,1)
-          PP   = SCL(KF,5,1)
-          BSC   = SCL(KF,1,1)  
+          PHAS = SCL(KF,1,1)
+          Q1   = SCL(KF,2,1)
+          Q2   = SCL(KF,3,1)
+          PP   = SCL(KF,4,1)
           RAMPN = TIM(KF,1)
           FLATN = TIM(KF,2)
           DOWNN = TIM(KF,3)
@@ -429,9 +406,9 @@
               SCALER = (RAMPN+FLATN+DOWNN-DBLIP)/DOWNN
               QN = Q2
             ENDIF
-            SCALER = BSC * SCALER  * COS(2.D0*PP*DBLIP*QN + PHAS)
+            SCALER = SCALER * COS(2.D0*PP*DBLIP*QN + PHAS)
           ELSEIF(IPASS .GT. RAMPN+FLATN+DOWNN) THEN
-            SCALER = 0.D0
+            SCALER = 1.D0
           ENDIF
 C          write(88,*) ' scaler ',IPASS,scaler,NINT(RAMPN+FLATN+DOWNN)
 
@@ -497,10 +474,8 @@
 
  88   CONTINUE
 
-      IF(OKPRT) THEN
-        WRITE(LPRT,*) IPASS,SCALER,NOEL,KLEY,LABEL(NOEL,1),
-     >  LABEL(NOEL,2)
-      ENDIF
+      IF(OKPRT) WRITE(LPRT,*) IPASS,SCALER,NOEL,KLEY,LABEL(NOEL,1),
+     >LABEL(NOEL,2)
 
       RETURN
 
@@ -524,20 +499,20 @@
          SCL2(JF,JT) = SCL2I(JF,JT) 
          TIM2(JF,JT) = TIM2I(JF,JT) 
       ENDDO
-
+      SCALE2 = 0.D0
       RETURN
 
-      ENTRY SCALE4(OCLOCI,ekinI)
+      ENTRY SCALE4(OCLOCI,EKINI)
       OCLOCK = OCLOCI
-      ekin = ekinI 
+      EKIN = EKINI 
       SCALE4 = 0.D0
       RETURN
 
       ENTRY SCALE6(XMI,YMI,DAT1I,DAT2I,DAT3I,NFRQI)
 C               OCLOCK PHI TURN#  FREQ  EKIN 
       NFRQ = NFRQI
-      IF(NFRQ.GT.ND) CALL ENDJOB(' SBR SCALER, too many data. '
-     >//'Max allowed is ND = ',ND)
+      IF(NFRQ.GT.ND) CALL ENDJOB(' SBR SCALER, too many data '
+     >//'sent to cubspl. Max allowed is ND = ',ND)
       DO 6 I=1,NFRQ
         XM(I) = XMI(I)
         YM(I) = YMI(I)
@@ -548,12 +523,12 @@
       SCALE6 = 0.D0
       RETURN
 
-c      ENTRY SCALE8(FREV0I,E0I,AKI)
-c      FREV0 = FREV0I
-c      E0 = E0I
-c      AK = AKI
-c      SCALE8 = 0.D0 
-c      RETURN
+C      ENTRY SCALE8(FREV0I,E0I,AKI)
+C      FREV0 = FREV0I
+C      E0 = E0I
+C      AK = AKI
+C      SCALE8 = 0.D0 
+C      RETURN
 
       ENTRY SCALE9(
      >             KFMO)
@@ -569,29 +544,45 @@
          ENDIF   
         ENDIF
       ENDDO
+      SCALE9 = 0.D0 
       RETURN
 
       ENTRY SCALEX(OKPRTI)
       OKPRT = OKPRTI
-        IF(OKPRT) THEN 
-          IF(.NOT.OKOPN) THEN
-            OK =(IDLUNI(
-     >                  LPRT)) 
-            OPEN(UNIT=LPRT,FILE='zgoubi.SCALING.Out',
-     >                     ERR=66,IOSTAT=IOS)
-            WRITE(LPRT,*) '#  IPASS, SCALER, lmnt #, KLEY, '
-     >      //'LABEL(NOEL,1), LABEL(NOEL,2)'
-            OKOPN = .TRUE.
-          ENDIF
-        ELSE
-          IF(OKOPN) THEN
-            CLOSE(LPRT)
-          ENDIF
+      IF(OKPRT) THEN 
+        IF(.NOT.OKOPN) THEN
+          OK =(IDLUNI(
+     >                LPRT)) 
+          OPEN(UNIT=LPRT,FILE='zgoubi.SCALING.Out',
+     >                   ERR=66,IOSTAT=IOS)
+          WRITE(LPRT,*) '#  IPASS, SCALER, lmnt #, KLEY, '
+     >    //'LABEL(NOEL,1), LABEL(NOEL,2)'
+          OKOPN = .TRUE.
         ENDIF
-      RETURN
- 66   IF(NRES.GT.0) WRITE(NRES,FMT='(A)') 
+      ELSE
+        IF(OKOPN) THEN
+          CLOSE(LPRT)
+          OKOPN = .FALSE.
+        ENDIF
+      ENDIF
+      GOTO 67
+ 66   CONTINUE
+      IF(NRES.GT.0) WRITE(NRES,FMT='(A)') 
      >'                *** WARNING, pgm scaler : ' 
      >//' could not open zgoubi.SCALING.out. Will skip printing.'
+      OKPRT = .FALSE.
+ 67   CONTINUE
+      IF(NRES.GT.0) THEN
+        IF(OKPRT) THEN 
+          WRITE(NRES,FMT='(/,15X,''PRINT option is ON, '')') 
+          WRITE(NRES,FMT='(  15X,
+     >    ''SCALING parameters will be logged in zgoubi.SCALING.Out.'',
+     >    /)') 
+        ELSE
+          WRITE(NRES,FMT='(/,15X,''PRINT option is OFF.'')') 
+        ENDIF
+      ENDIF
+      SCALEX = OKPRT
       RETURN
 
       END
