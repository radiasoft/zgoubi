C      subroutine srchCO(nCO,xK,xiDeg)
C Starting from a single initial particle near closed orbits, as read from input file 
C zgoubi.dat, look for nCO precise co's
      implicit double precision (a-h,o-z)

      parameter (lunR=11,lunW=12,lunTw=14,lunIn=15)
      character txt132*132, let*1
      parameter (nCOmx=10001, maxIter=20)
      dimension x(nCOmx),xp(nCOmx),z(nCOmx),
     >                   zp(nCOmx),s(nCOmx),d(nCOmx),let(nCOmx)
      dimension clorb(7,nCOmx)

      INTEGER DEBSTR,FINSTR

      logical ok, strcon, first, idluni
      data ok, first / .false., .true./
      logical okpart, empty
      logical gtText
      character(132) titl, titl0
      character(1) rep
      logical exs
      character(200)  fname

      data okpart / .false. /
 
C Cyclo ADS H_2^+
      data  kaseV0,nCO0,T10,T20 / 0, 10, 120879035d0, 1611720466.6d0 /
C RACCAM FFAG
c      data  kaseV0, nCO0, T10, T20 / 0, 99, 12d6, 180d6 /
C EMMA
c      data  kaseV0, nCO0, T10, T20 / 0, 3, 10d6, 20d6 /
c      data am0, q0 /  0.51099892, 1.602176487e-19  /

C Requested precision on co (cm, mrad)
C Careful here :  PREC MUST BE COMPATIBLE with precision on x and xp as read in zgoubi.res
      data precX0, precXp0 /  0.001, 0.01 /
      data titl0 / '! SearchCO.data not found. Created.  '/
      
C ----------------- Input data
C      call system('ln -sf lattice.data searchCO.data')
      call readat(lunIn,'searchCO.data', 
     >                 kaseV,nCO,T1,T2,precX,precXp,titl,ierr)
      if(ierr.eq.3) then
        write(6,*) '  Failed to open searchCO.data '
      elseif(ierr.eq.2) then
        write(6,*) '  Failed to read data from searchCO.data '
      elseif(ierr.eq.1) then
        write(6,*) '  EOF reached in searchCO.data '
      endif
      if(ierr.gt.1) then 
        titl = titl0
        kaseV = kaseV0
        nCO = nCO0
        T1 = T10
        T2 = T20
        precX = precX0
        precXp = precXp0
        write(6,*)  ' (beware : case dependent input) '
        write(6,*)  '  kaseV = 0 or 1 (w/ or w/o vertical motion)'
        write(6,*)  '  nCO = ',nCO,' a few units (nb of co-s)'
        write(6,*)  '  T1 = ',T1,' initial energy (eV) - kinetic'
        write(6,*)  '  T2 = ',T2,' final energy (eV) - kinetic'
        write(6,*)  '  precX = ',precX
        write(6,*)  '  precXp = ',precXp
        write(6,*) ' ok (y/n, default is "y") ? '
        write(6,*) ' Otherwise edit and update the '//
     >  'searchCO.data file just created' 
        rep = 'y'
c        read(*,fmt='(a)',err=77,end=77) rep
 77     continue
      endif

      if(ierr.gt.1) then 
        open(unit=lunIn,file='searchCO.data')
        write(lunIn,*) titl(debstr(titl):finstr(titl))
        write(lunIn,*) '  kaseV = ',kaseV
     >                  ,' ! 0 or 1 (w/ or w/o vertical motion)'
        write(lunIn,*) '  nCO = ',nCO,' ! a few units (nb of co-s)'
        write(lunIn,*) '  T1 = ',T1,' ! initial energy (eV) - kinetic'
        write(lunIn,*) '  T2 = ',T2,' ! final energy (eV) - kinetic'
        write(lunIn,*) '  precX = ',precX,' ! (cm) '
        write(lunIn,*) '  precXp = ',precXp,' ! (mrad) '
        close(lunIn)
      endif

      if(rep .eq. 'n' .or. rep .eq. 'N') stop 
C-----------------------------
      fname = 'zgoubi_searchCO_from1Traj-In.dat'
      INQUIRE(file=fname,exist=exs)
      if(.not. exs) then
        fname = 'searchCO_from1Traj-In.dat'
        INQUIRE(file=fname,exist=exs)
      endif
      if(.not. exs) stop
     >'Need  zgoubi_searchCO_from1Traj-In.dat file '//
     >'or  searchCO_from1Traj-In.dat  file  (containing 1st '
     >//'traj (T1 kin_energy) near closed orbit).'

      open(unit=lunR,file=fname)

      clight = 2.99792458D8 
      cl9 =  clight / 1.d9
      QE =  1.602176487D-19      !!!!1.602e-19

      
      nco1 = nco + 1

      jo = 1
      jok = 0
      ipass = 1
 2    continue

        rewind(lunR)
        open(unit=lunW,file='zgoubi.dat')
        rewind(lunW)

C Read till "KOBJ"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(a)') 
     >        'Data generated by searchCO '
 66       read(lunR,fmt='(a)') txt132
          write(lunW,*) txt132(debstr(txt132):finstr(txt132))
          if(txt132(debstr(txt132):debstr(txt132)) .eq. '!') goto 66
          read(lunR,fmt='(a)') txt132
          write(lunW,*) txt132(debstr(txt132):finstr(txt132))
          read(txt132,*) BORO
          write(6,*) ' Reference rigidity BRho = ',BORO/1000.d0,' T.m' 
          read(lunR,*) kobj

C          if(kobj.ne.2)  stop '  OBJET must be type KOBJ=2 '
          if(kobj.ne.2) then

            kobj = 2
            write(lunW,*) kobj
            write(txt132,*) ' 1 1  ' 
            write(lunW,*) txt132(debstr(txt132):finstr(txt132))               
            write(txt132,*) ' 0. 0. 0. 0. 0. 1. ''o'' ' 
            write(lunW,*) txt132(debstr(txt132):finstr(txt132))               
            write(txt132,*) ' 1 ' 
            write(lunW,*) txt132(debstr(txt132):finstr(txt132))               
            write(6,*) ' OBJET/Kobj=2 created, assuming'
     >      //  ' coordinates zero and p/pRef=1. '
            write(6,*) ' Press return to continue... '
            read(*,*)

          else

            write(lunW,*) kobj
C Read till "IMAX IMAXT"
            read(lunR,*) imax, imaxt
            if(imax.gt.1) stop ' Give just one co in .dat file. ...'
            if(imax.lt.1) then
              write(*,*) ' No  co in '//
     >        fname(debstr(fname):finstr(fname))//' !!'
              stop
            endif
            txt132 = ' 1  1'
            write(lunW,*) txt132(debstr(txt132):finstr(txt132))
C Read all initial traj present in zgoubi_searchCO_from1Traj-In.dat
            do i=1,imax
              read(lunR,*) x(i),xp(i),z(i),zp(i),s(i),d(i),let(i)
c              write(*,*) x(i),xp(i),z(i),zp(i),s(i),d(i),let(i)
            enddo
C Retains only traj #1
            if(jo.eq.1) then 
              dj = d(1)
              xj = x(1)
              xpj = xp(1)
            else
              dj = djnew
              xj = xjok
              xpj = xpjok
            endif

            write(lunW,fmt='(1p,2(e14.6,1x),2(e9.1,1x),e9.1,1x
     >      ,e14.7,1x,4a,i4)') 
     >      xj,xpj,z(1),zp(1),s(1),dj,' ','''',let(1),'''',jo
            write(6,fmt='(1p,2(e14.6,1x),2(e9.1,1x),e9.1,1x
     >      ,e14.7,1x,4a,i4)') 
     >      xj,xpj,z(1),zp(1),s(1),dj,' ','''',let(1),'''',jo           
          write(6,*)
C write first line with "1's" 
          read(lunR,fmt='(a)',end=10) txt132
          write(lunW,*) txt132(debstr(txt132):finstr(txt132))   
        endif
  
C Jump to the next keyword
        ok = gttext(lunR,''' ',
     >                         txt132)
        backspace(lunR)

C Complete zgoubi.dat with the rest of zgoubi_searchCO_from1Traj-In.dat
 1      continue
          read(lunR,fmt='(a)',end=10) txt132
          if(strcon(txt132,'''PARTICUL''',10,
     >                                       IS)) then 
            okpart = .true.
            write(lunW,*) txt132(debstr(txt132):finstr(txt132))               
            read(lunR,fmt='(a)',end=10) txt132
            write(lunW,*) txt132(debstr(txt132):finstr(txt132))               
            read(txt132,*) am,q
            write(6,*) ' particle mass and charge : ', am, q

            if(jo.eq.1) then 
              pRef = abs(BORO*CL9*Q/QE)
              p1 = sqrt(T1 * (T1 + 2.d0* am*1.d6))/1.d6
              if(nCO.gt.1) then
                fac = (T2-T1)/dble(nCO-1)
              else
                fac = 0.d0
              endif
              dT = fac 
            endif

            if(dT.gt.0.d0) then
              dT = fac * dble(jo)
            else
              dT = fac * dble(jo-1)
            endif

            TT = T1 + dT
            pb = sqrt(TT * (TT + 2.d0* am*1.d6))/1.d6
C            pb = sqrt((T1+dT) * ((T1+dT) + 2.d0* am*1.d6))/1.d6
            djnew = pb/pRef

c            write(*,*) ' t1, t2, dT, pb, pRef, djnew = ',
c     >           t1, t2, dT, pb, pRef, djnew 
c                read(*,*)

            
            txt132 =   '''PICKUPS''' 
              write(lunW,*) txt132(debstr(txt132):finstr(txt132))
            txt132 =  ' 1' 
              write(lunW,*) txt132(debstr(txt132):finstr(txt132))
            txt132 =   ' #Start'
              write(lunW,*) txt132(debstr(txt132):finstr(txt132))
            txt132 =   '''MARKER''   #Start'   
              write(lunW,*) txt132(debstr(txt132):finstr(txt132))

          elseif(strcon(txt132,'''PICKUPS''',9,
     >                                         IS)) then
              read(lunR,fmt='(a)',end=10) txt132
              read(lunR,fmt='(a)',end=10) txt132

          elseif(strcon(txt132,'''MARKER''',8,
     >                                        IS)) then
            if(strcon(txt132,'#Start',6,
     >                                   IS)) then
            endif

          elseif(strcon(txt132,'''FIT''',5,
     >                                     IS)
     >    .or. strcon(txt132,'''FIT2''',6,
     >                                     IS)) then
            read(lunR,*,end=10) IV
            do ii = 1, iv
              read(lunR,fmt='(a)',end=10) txt132
            enddo
            read(lunR,*,end=10) IC
            do ii = 1, ic
              read(lunR,fmt='(a)',end=10) txt132
            enddo

          elseif(strcon(txt132,'''REBELOTE''',10,
     >                                           IS)) then
              read(lunR,fmt='(a)',end=10) txt132

          elseif(strcon(txt132,'''END''',5,
     >                                       IS)) then
              txt132 = '''REBELOTE'''
              write(lunW,*) txt132(debstr(txt132):finstr(txt132))
              txt132 = '99   0.0  99'
              write(lunW,*) txt132(debstr(txt132):finstr(txt132))
              txt132 = '''END'''
              write(lunW,*) txt132(debstr(txt132):finstr(txt132))
              goto 10

          else
             
              write(lunW,*) txt132(debstr(txt132):finstr(txt132))
          endif

        goto 1

 10     continue
        close(lunW)

         if(.not. okpart ) stop ' PARTICUL data needed in zgoubi.dat'

c         write(*,*) ' zgoubi.dat completed '
c         read(*,*)

        call avrorb(jo,maxIter,
     >           iter,xav,xpav,zav,zpav,sav,dav,tav,kex,ok,precX,precXp)
 
        if(ok) then 
          jok = jok + 1
          write(6,*) 
          write(6,fmt='(a,i4,a,a,2f9.4,a,a,i4,a)') 
     >    ' ---------    Found ',jok,' average orbits ',
     >    '(precision dx, dx'' : ',precX,precXp,' cm, mrad) ; ',
     >    '  now c.o. #',jo,' :'
          write(6,fmt='(1p,2e14.6,2e9.1,e9.1,e14.6,e14.6,2(1x,i3))') 
     >                          xav,xpav,zav,zpav,sav,dav,tav,jo,iter
          write(6,*)
          clorb(1,jok) = xav
          clorb(2,jok) = xpav
          if(kaseV.eq.1) then
            clorb(3,jok) = .0001 !!!!!zav
          else
            clorb(3,jok) = .0
          endif
          clorb(4,jok) = .0 !!!!zpav
          clorb(5,jok) = .0 !!!sav
          clorb(6,jok) = dav
          clorb(7,jok) = tav
          xjok = xav
          xpjok = xpav
        endif  

c              write(*,*) ' jo, jok, ok : ',jo,jok,ok
c                   read(*,*)


        write(6,*) ' jok / jo / nCO :    ', jok,' / ', jo,' / ', nCO
        if(dT.gt.0.d0) then
c           if(TT.gt. 1.0000001*T2) goto 60
          if(jo.ge. nCO) goto 60
        else
c           if(TT.lt. .999999*T1) goto 60
          if(jo.gt. nCO) goto 60
        endif

        jo = jo+1

      goto 2

 60   continue
      close(lunR)

Create  zgoubi_searchCO-Out.dat  containing computed closed orbits
      open(unit=lunR,file=fname)
      open(unit=lunW,file='zgoubi_searchCO-Out.dat')
C Read/write till "KOBJ"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(a)') 
     >  'Data generated by searchCO '
        do i=1,3
          read(lunR,fmt='(a)') txt132
          write(lunW,fmt='(a)') txt132
        enddo
C Read/write "IMAX IMAXT"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(i3,a)') jok,'  1'
C Write all co coordinates (clorb(i,j)) into zgoubi_searchCO-Out.dat
        do j=1,jok
          pj = pRef * (1.d0+clorb(6,j))
          Tj = sqrt(pj*pj+am*am) - am
          write(lunW,fmt=
     >        '(1p,2(e14.6,1x),2(e9.1,1x),e9.1,1x,e16.8
     >        ,4a,f16.6,a,1x,i5)') 
     >    clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),clorb(5,j),
     >    1.d0+clorb(6,j),' ','''',let(1),''' ',Tj/10.,' MeV ',j
        enddo
C Makes the new line of 1s
        read(lunR,fmt='(a)',end=62) txt132
        txt132 = ' 1 1 1 1 1 1 1 1 1 1 '
        do j=1,(jok-1)/10+1
          write(lunW,*) txt132(debstr(txt132):finstr(txt132))   
        enddo
        read(lunR,fmt='(a)',end=62) txt132
C Completes zgoubi_searchCO-Out.dat with the rest of zgoubi_searchCO_from1Traj-In.dat
 61   continue
        read(lunR,fmt='(a)',end=62) txt132
        write(lunW,*) txt132(debstr(txt132):finstr(txt132))   
        if(strcon(txt132,'REBELOTE',8,
     >                                IS)) then 
          backspace(lunW)
          read(lunR,fmt='(a)',end=62) txt132

        elseif(strcon(txt132,'''FIT''',5,
     >                                     IS)
     >  .or. strcon(txt132,'''FIT2''',6,
     >                                     IS)) then
          backspace(lunW)
            read(lunR,*,end=10) IV
            do ii = 1, iv
              read(lunR,fmt='(a)',end=10) txt132
            enddo
            read(lunR,*,end=10) IC
            do ii = 1, ic
              read(lunR,fmt='(a)',end=10) txt132
            enddo

        elseif(strcon(txt132,'''END''',5,
     >                                     IS)) then
          backspace(lunW)
            txt132 = '''REBELOTE'''
            write(lunW,*) txt132(debstr(txt132):finstr(txt132))
            txt132 = ' 199   0.2  99'
            write(lunW,*) txt132(debstr(txt132):finstr(txt132))
            txt132 = '''END'''
            write(lunW,*) txt132(debstr(txt132):finstr(txt132))

        endif
      goto 61
 62   close(lunR)
      close(lunW)

Create searchCO.out_COs
      open(unit=lunTw,file='run_twissScan')
      write(lunTw,fmt='(a,1p,e16.8,a)') 
     >'# Generated by searchCOs_From1Traj. Zgoubi units (cm, mrad).'
     >//' Reference rigidity BORO = ',BORO,' kG.cm' 

      write(6,*) ' '
      write(6,*) '--------------'
      write(6,fmt='(a,i7,a,i7,a)') fname(debstr(fname):finstr(fname))
     >//' contains ',
     >jok,' co''s below (over ',nCO,' trajectories launched) :'
      do j=1,jok
        pj = pRef * (1.d0+clorb(6,j))
        Tj = sqrt(pj*pj+am*am) - am
        write(6,fmt='(1p, 2(e14.6,1x), 2(e9.1,1x), e16.8,1x,
     >        e14.6, 4a, e16.6, a, f16.6, a,1x,i5)') 
     >  clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),
     >  clorb(5,j), 1.d0+clorb(6,j), 
     >    ' ','''',let(1),''' ',pj,' MeV/c, ',Tj/10.,' MeV ',j
      enddo
      write(6,*) ' '
      if(first) then
        call system('mv -f searchCO.out_COs  searchCO.out_COs_old')
        first = .false.
      endif
      open(unit=33,file='searchCO.temp')
      write(33,fmt='(
     >''# Ref rigidity BORO = '',1p,e16.8,'' (kG.cm)'',
     >/,''# '', /''# '',/,
     >''# '',T5, ''Y'',T20,''T'',T35,''Z'',T45,''P'',
     >T60,''s'',T72,''p/pref'',T120,''#iter'')') ,BORO
      do j=1,jok
        pj = pRef * (1.d0+clorb(6,j))
        bta = pj / sqrt(pj*pj + am*am)
        Tj = sqrt(pj*pj+am*am) - am
        sar = clorb(5,j)
        cm = 1.d2
        sec = 1d-6
        sar = bta * clight * (clorb(7,j)*sec) * cm
        sar = 0.d0
        write(33,fmt='(1p, 2(e14.6,1x), 2(e9.1,1x), e16.8, 1x,
     >        e15.8,1x, 4a, f16.6, a, 2(i5,1x))') 
     >  clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),
     >  sar, 1.d0+clorb(6,j),' ','''',let(1),''' ',
     >  Tj/10.,' MeV  ',j, iter !,xK,xiDeg
c        write(33,fmt='(1p, 2(e14.6,1x), 2(e9.1,1x), e16.8, 1x,
c     >        e13.5,1x, 4a, e16.8, f16.6, a, 2(i5,1x))') 
c     >  clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),
c     >  clorb(5,j), 1.d0+clorb(6,j),' ','''',let(1),''' ',
c     >  clorb(7,j),Tj/10.,' MeV  ',j, iter !,xK,xiDeg
      enddo
      write(33,*) ' '
      close(33)
      call system('cat searchCO.temp >> searchCO.out_COs')
      call system('rm searchCO.temp')

Create zgoubi_searchCO-Out_MATRIX.dat including MATRIX and containing closed orbits
      open(unit=lunR,file=fname)
      open(unit=lunW,file='zgoubi_searchCO-Out_MATRIX.dat')
C Read/write till "KOBJ"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(a)') 
     >  'Data generated by searchCO '
        do i=1,2
          read(lunR,fmt='(a)') txt132
          write(lunW,fmt='(a)') txt132
        enddo
C Read "KOBJ", write "5.xx"
        read(lunR,fmt='(a)') txt132
        if    (jok.lt.  1) then 
          if (idluni(itemp)) then
            open(unit=itemp,file='searchCO.temp')
            write(itemp,*) ' 0   CO out of searchCO !'
            close(itemp)
          endif
          stop ' Prgrm searchCO. No CO found. '
        elseif(jok.eq.  1) then 
          write(lunW,fmt='(a)') '5'
        elseif(jok.le.  9) then 
          write(lunW,fmt='(a3,I1)') '5.0',jok
        elseif(jok.le. 99) then
          write(lunW,fmt='(a2,I2)') '5.',jok
        else
          stop ' Prgrm searchCO. Too many co''s'
        endif
C Read "IMAX IMAXT", write sampling
        read(lunR,fmt='(a)') txt132
        write(lunW,*) '.001 .001 .001 .001 0. .001  '
C Write all co coordinates (clorb(i,j)) into zgoubi_searchCO-Out_MATRIX.dat
        read(lunR,fmt='(a)') txt132
        do j=1,jok
          pj = pRef * (1.d0+clorb(6,j))
          Tj = sqrt(pj*pj+am*am) - am
          write(lunW,fmt=
     >    '(1p,2(e14.6,1x),2(e9.1,1x),e9.1,1x,e16.8,4a,f16.6,a,1x,i5)') 
     >    clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),
     >    clorb(5,j), 1.d0+clorb(6,j), !!!!!!clorb(7,j),
     >          ' ','''',let(1),''' ',Tj/10.,' MeV ',j
        enddo
        do j=1,nCO-jok
          read(lunR,fmt='(a)') txt132
        enddo

C Get rid of any '1  1  1 ...'
 612    continue
        read(lunR,fmt='(a)') txt132
        txt132 = txt132(debstr(txt132):finstr(txt132))  
        if(txt132(1:1) .ne. '''') goto 612               
        goto 613

C Completes zgoubi_searchCO-Out_MATRIX.dat with the rest of zgoubi_searchCO_from1Traj-In.dat
C except for introducing MATRIX
 611    continue
        read(lunR,fmt='(a132)',end=621,err=621) txt132
 613    continue

        if(strcon(txt132,'''MARKER''',8,
     >                                  IS)) then         !skip
        elseif(strcon(txt132,'''FAISCEAU''',10,
     >                                         IS)) then     !skip
        elseif(strcon(txt132,'''MATRIX''',8,
     >                                      IS)) then     !skip
          read(lunR,fmt='(a132)',end=621,err=621) txt132
        elseif(strcon(txt132,'''PICKUPS''',9,
     >                                       IS)) then     !skip
          read(lunR,fmt='(a132)',end=621,err=621) txt132
          read(lunR,fmt='(a132)',end=621,err=621) txt132

        elseif(strcon(txt132,'''FIT''',5,
     >                                     IS)
     >  .or. strcon(txt132,'''FIT2''',6,
     >                                     IS)) then    !skip
            read(lunR,*,end=10) IV
            do ii = 1, iv
              read(lunR,fmt='(a)',end=10) txt132
            enddo
            read(lunR,*,end=10) IC
            do ii = 1, ic
              read(lunR,fmt='(a)',end=10) txt132
            enddo

        elseif(strcon(txt132,'''REBELOTE''',10,
     >                                        IS)) then   !skip
          read(lunR,fmt='(a132)',end=621,err=621) txt132
        elseif(strcon(txt132,'''END''',5,
     >                               IS)) then 
          write(lunW,*) '''MATRIX'''
          write(lunW,*) ' 1  11'
          write(lunW,*) '''FAISCEAU'''
          write(lunW,*) '''END'''
          GOTO 621
        else
          write(lunW,*) txt132(debstr(txt132):finstr(txt132))   
        endif
      goto 611

 621  close(lunR)
      close(lunW)

Create run_twissScan_template.dat and run_twissScan
C      open(unit=lunR,file='zgoubi_searchCO_from1Traj-In.dat')
      open(unit=lunR,file=fname)
      open(unit=lunW,file='run_twissScan_template.dat')
C Read/write till "KOBJ"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(a)') 
     >  'Data generated by searchCO '
        do i=1,2
          read(lunR,fmt='(a)') txt132
          write(lunW,fmt='(a)') txt132
        enddo
C Read "KOBJ", write "5.xx"
        read(lunR,fmt='(a)') txt132
        if    (jok.lt.  1) then 
          if (idluni(itemp)) then
            open(unit=itemp,file='searchCO.temp')
            write(itemp,*) ' 0   CO out of searchCO !'
            close(itemp)
          endif
          stop ' Prgrm searchCO. No CO found. '
        else
          write(lunW,fmt='(a)') '5'
        endif
C Read "IMAX IMAXT", write sampling
        read(lunR,fmt='(a)') txt132
        write(lunW,*) '.001 .001 .001 .001 0. .001  '
C Write all template co coordinates 
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(a)') 
     >  ' Y0  T0  Z0  P0  S0  D0  reference orbit '   
        do j=1,nCO-jok
          read(lunR,fmt='(a)') txt132
        enddo
cC Get rid of '1  1  1 ...'
          read(lunR,fmt='(a)') txt132
C Completes zgoubi_searchCO-Out_MATRIX.dat with the rest of zgoubi_searchCO_from1Traj-In.dat
C except for introducing MATRIX
 631    continue
        read(lunR,fmt='(a132)',end=641,err=641) txt132

        if(strcon(txt132,'''MARKER''',8,
     >                                  IS)) then         !skip
        elseif(strcon(txt132,'''FAISCEAU''',10,
     >                                         IS)) then     !skip
        elseif(strcon(txt132,'''MATRIX''',8,
     >                                      IS)) then     !skip
          read(lunR,fmt='(a132)',end=641,err=641) txt132
        elseif(strcon(txt132,'''PICKUPS''',9,
     >                                       IS)) then     !skip
          read(lunR,fmt='(a132)',end=641,err=641) txt132
          read(lunR,fmt='(a132)',end=641,err=641) txt132

        elseif(strcon(txt132,'''FIT''',5,
     >                                     IS)
     >  .or. strcon(txt132,'''FIT2''',6,
     >                                     IS)) then    !skip
            read(lunR,*,end=10) IV
            do ii = 1, iv
              read(lunR,fmt='(a)',end=10) txt132
            enddo
            read(lunR,*,end=10) IC
            do ii = 1, ic
              read(lunR,fmt='(a)',end=10) txt132
            enddo

        elseif(strcon(txt132,'''REBELOTE''',10,
     >                                        IS)) then   !skip
          read(lunR,fmt='(a132)',end=641,err=641) txt132
        elseif(strcon(txt132,'''END''',5,
     >                               IS)) then 
          write(lunW,*) '''FAISCEAU'''
          write(lunW,*) '''TWISS'''
          write(lunW,*) ' 2 1. 1.'
          write(lunW,*) '''END'''
          GOTO 641
        else
          write(lunW,*) txt132(debstr(txt132):finstr(txt132))   
        endif
      goto 631

 641  close(lunR)
      close(lunW)
Create run_twissScan
      call system('\cp run_twissScan  run_twissScan_old')
      call system('rm -f run_twissScan ')
      open(unit=lunTw,file='run_twissScan.out')
      write(lunTw,*) '# Generated by searchCOs_From1Traj '
      close(lunTw)
      open(unit=lunR,file='searchCO.out_COs')
      open(unit=lunTw,file='run_twissScan')
C Read a 4-line header
      do i = 1, 4 
        read(lunR,*) txt132
      enddo
C Read/write till "KOBJ"
      write(lunTw,fmt='(a,///)') '# Generated by searchCOs_From1Traj '
      write(lunTw,fmt='(a)') ' '
      write(lunTw,fmt='(a)')
     >'\cp run_twissScan.out run_twissScan.out_old ; ' // 
     >'rm run_twissScan.out ' 
      ii = 1
 653  continue
        read(lunR,fmt='(a)',err=651,end=651) txt132
        if(len(txt132(debstr(txt132):finstr(txt132))) .le. 2 ) goto 651
c            write(*,*) ii
c            write(*,*) txt132(debstr(txt132):finstr(txt132))
c               read(*,*)
        write(lunTw,fmt='(a,i5)') '# ',ii
        write(lunTw,fmt='(a)')
     >  'cp run_twissScan_template.dat zgoubi.dat ; ' // 
     >  ' sed -i ''s@ Y0  T0  Z0  P0  S0  D0  reference orbit @'//
     >  txt132(debstr(txt132):finstr(txt132)) //
     >  '@g'' zgoubi.dat ; ' //
     >  '~/zgoubi/SVN/current/zgoubi/zgoubi ; ' //
     >  'grep ''@ Q1   '' zgoubi.TWISS.out  > temp ; ' //
     >  'grep ''@ Q2   '' zgoubi.TWISS.out > temp2  ; ' //
     >  'paste temp temp2 > temp3 ; ' //
     >  'grep ''@ DQ1   '' zgoubi.TWISS.out  > temp ; ' //
     >  'grep ''@ DQ2   '' zgoubi.TWISS.out  > temp2 ; ' //
     >  'paste temp temp2 > temp4 ; paste temp3 temp4 > temp5 ; ' //
     >  'grep ''@ DELTAP  '' zgoubi.TWISS.out  > temp ; ' //
     >  'paste temp temp5 > temp6 ; sed -i ''s/@//g'' temp6 ; ' //
     >  'sed -i ''s@\%le@@g'' temp6 ; ' //
     >  'sed -i ''s@\[+ integer\]@@g'' temp6 ; ' //
     >  'cat  temp6 >> run_twissScan.out ; ' // 
     >  '   rm run_twiss.out_temp ; ' //
     >  '   rm temp  temp2  temp3  temp4  temp5  temp6'
        ii = ii + 1
      goto 653
 651  continue
      write(lunTw,fmt='(a)') ' '
      write(lunTw,fmt='(a)')
     >  'cp -i ~/zgoubi/SVN/zgoubi-code/toolbox/gnuplotFiles/'
     >  // 'gnuplot_runTwissScan/gnuplot_runTwissScan.cmd  . '
      write(lunTw,fmt='(a)') ' '
      write(lunTw,fmt='(a)')
     >  'gnuplot < ./gnuplot_runTwissScan.cmd ' 
      write(lunTw,fmt='(a)') ' '
      write(lunTw,fmt='(a)')
     >  'okular gnuplot_runTwissScan_QDQ.eps'
      close(lunR)
      close(lunTw)
      call system('chmod +x run_twissScan')

Create zgoubi_searchCO-Out_periodicParam.dat 
C      open(unit=lunR,file='zgoubi_searchCO_from1Traj-In.dat')
      open(unit=lunR,file=fname)
      open(unit=lunW,file='zgoubi_searchCO-Out_periodicParam.dat')
C Read/write till "KOBJ"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(a)') 
     >  'Data generated by searchCO '
        do i=1,2
          read(lunR,fmt='(a)') txt132
          write(lunW,fmt='(a)') txt132
        enddo
C Read "KOBJ", write "2" 
        read(lunR,fmt='(a)') txt132
        if    (jok.lt.  1) then 
          if (idluni(itemp)) then
            open(unit=itemp,file='searchCO.temp')
            write(itemp,*) ' 0   CO out of searchCO !'
            close(itemp)
          endif
          stop ' Prgrm searchCO. No CO found. '
        else
          write(lunW,fmt='(a2,I2)') '2'
        endif
C Read "IMAX IMAXT",  write "3*nCO 1" 
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(I4,a)') 3*jok,'   1'
C Write all co coordinates (clorb(i,j)) and +/- samples
        read(lunR,fmt='(a)') txt132
        do j=1,jok
          pj = pRef * (1.d0+clorb(6,j))
          Tj = sqrt(pj*pj+am*am) - am
          write(lunW,fmt=
     >      '(1p,2(e16.8,1x),2(e9.1,1x),e9.1,1x,e16.8,4a,f16.6,a)') 
     >      clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),clorb(5,j),
     >      1.d0+clorb(6,j),' ','''',let(1),''' ',Tj/10.,' MeV '
          write(lunW,fmt=
     >      '(1p,2(e16.8,1x),2(e9.1,1x),e9.1,1x,e16.8,4a)') 
     >      clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),
     >      clorb(5,j), 1.d0+clorb(6,j)*1.001,' ','''',let(1),''' '
          write(lunW,fmt=
     >      '(1p,2(e16.8,1x),2(e9.1,1x),e9.1,1x,e16.8,4a)') 
     >      clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),
     >      clorb(5,j), 1.d0+clorb(6,j)*0.999,' ','''',let(1),''' '
        enddo
        do j=1,nCO-jok
          read(lunR,fmt='(a)') txt132
        enddo

C Write ' 1 1 1 1 1 ...'
c        read(lunR,fmt='(a)',end=721,err=721) txt132
        write(lunW,*) ('1 ',i=1,3*jok)    

C Completes zgoubi_searchCO-Out_periodicParam.dat with the rest of zgoubi_searchCO_from1Traj-In.dat
 711    continue
        read(lunR,fmt='(a)',end=721,err=721) txt132

        if(strcon(txt132,'''END''',5,
     >                               IS)) then
          backspace(lunW)
          write(lunW,*) '''MARKER''  #E'
          write(lunW,*) '''FAISCEAU'''

        elseif(strcon(txt132,'''FIT''',5,
     >                                     IS)
     >  .or. strcon(txt132,'''FIT2''',6,
     >                                     IS)) then    !skip
            read(lunR,*,end=10) IV
            do ii = 1, iv
              read(lunR,fmt='(a)',end=10) txt132
            enddo
            read(lunR,*,end=10) IC
            do ii = 1, ic
              read(lunR,fmt='(a)',end=10) txt132
            enddo
            goto 711

        endif
        write(lunW,*) txt132(debstr(txt132):finstr(txt132))   
      goto 711
 721  continue

            txt132 = ' '
            write(lunW,*) txt132(debstr(txt132):finstr(txt132))
            txt132 = ' '
            write(lunW,*) txt132(debstr(txt132):finstr(txt132))
            txt132 = '''REBELOTE'''
            write(lunW,*) txt132(debstr(txt132):finstr(txt132))
            txt132 = '99   0.2  99'
            write(lunW,*) txt132(debstr(txt132):finstr(txt132))

      close(lunR)
      close(lunW)

Create zgoubi_searchCO-Out_TrkFourier.dat 
C      open(unit=lunR,file='zgoubi_searchCO_from1Traj-In.dat')
      open(unit=lunR,file=fname)
      open(unit=lunW,file='zgoubi_searchCO-Out_TrkFourier.dat')
C Read/write till "KOBJ"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(a)') 
     >  'Data generated by searchCOs_From1Traj'
        do i=1,2
          read(lunR,fmt='(a)') txt132
          write(lunW,fmt='(a)') txt132
        enddo
C Read "KOBJ", write "2" 
        read(lunR,fmt='(a)') txt132
        if    (jok.lt.  1) then 
          if (idluni(itemp)) then
            open(unit=itemp,file='searchCO.temp')
            write(itemp,*) ' 0   CO out of searchCO !'
            close(itemp)
          endif
          stop ' Prgrm searchCO. No CO found. '
        else
          write(lunW,fmt='(a2,I2)') '2'
        endif
C Read "IMAX IMAXT",  write "3*nCO 1" 
        read(lunR,fmt='(a)') nbtraj
        write(lunW,fmt='(I4,a)') jok,'   1'
C Write all co coordinates (clorb(i,j)) and +/- samples
        read(lunR,fmt='(a)') txt132
        do j=1,jok
          pj = pRef * (1.d0+clorb(6,j))
          Tj = sqrt(pj*pj+am*am) - am
          xx = clorb(1,j)+.1
          yy = clorb(3,j)+.1
C          xx = clorb(1,j)+.01
C          yy = clorb(3,j)+.01
C          xx = clorb(1,j)+.001
C          yy = clorb(3,j)+.001
          write(lunW,fmt=
     >    '(1p,2(e16.8,1x),2(e9.1,1x),e9.1,1x,e16.8,4a,f16.6,a)') 
     >    xx, clorb(2,j), yy, clorb(4,j),clorb(5,j),
     >    1.d0+clorb(6,j),' ','''',let(1),''' ',Tj/10.,' MeV '
        enddo
        do j=1,nCO-jok
          read(lunR,fmt='(a)') txt132
        enddo
C Write ' 1 1 1 1 1 ...'
        read(lunR,fmt='(a132)',end=821,err=821) txt132
        write(lunW,*) ('1 ',i=1,jok)    

        write(lunW,*) '''PARTICUL'''    
        write(lunW,*) AM, Q, ' 0. 0. 0. '
        write(lunW,*) '''FAISTORE'''    
        write(lunW,*) ' b_zgoubi.fai #S'
        write(lunW,*) ' 1'
        write(lunW,*) '''PICKUPS'''    
        write(lunW,*) ' 1'
        write(lunW,*) ' #S '
        write(lunW,*) '''FAISCEAU'''
        write(lunW,*) '''MARKER''  #S'

C Completes zgoubi_searchCO-Out_TrkFourier.dat  with the rest of zgoubi_searchCO_from1Traj-In.dat
 811    continue
        read(lunR,fmt='(a132)',end=821,err=821) txt132

        if(strcon(txt132,'''MATRIX''',8,
     >                                  IS)) then
          read(lunR,fmt='(a132)',end=821,err=821) txt132
          goto 811
        elseif(strcon(txt132,'''FAISCEAU''',10,
     >                                         IS)) then
          goto 811
        elseif(strcon(txt132,'''PICKUPS''',9,
     >                                       IS)) then
          read(lunR,fmt='(a132)',end=821,err=821) txt132
          read(lunR,fmt='(a132)',end=821,err=821) txt132
          goto 811
        elseif(strcon(txt132,'''PARTICUL''',10,
     >                                         IS)) then
          read(lunR,fmt='(a132)',end=821,err=821) txt132
          goto 811
        elseif(strcon(txt132,'''FAISTORE''',10,
     >                                         IS)) then
          read(lunR,fmt='(a132)',end=821,err=821) txt132
          read(lunR,fmt='(a132)',end=821,err=821) txt132
          goto 811
        elseif(strcon(txt132,'''FAISCNL''',10,
     >                                         IS)) then
          read(lunR,fmt='(a132)',end=821,err=821) txt132
          goto 811
        elseif(strcon(txt132,'''MARKER''',8,
     >                                      IS)) then
          goto 811
        elseif(strcon(txt132,'''FIT''',5,
     >                                     IS)
     >  .or. strcon(txt132,'''FIT2''',6,
     >                                     IS)) then    !skip
            read(lunR,*,end=10) IV
            do ii = 1, iv
              read(lunR,fmt='(a)',end=10) txt132
            enddo
            read(lunR,*,end=10) IC
            do ii = 1, ic
              read(lunR,fmt='(a)',end=10) txt132
            enddo
            goto 811
        elseif(strcon(txt132,'''REBELOTE''',10,
     >                                         IS)) then
          read(lunR,fmt='(a132)',end=821,err=821) txt132
          goto 811
        elseif(strcon(txt132,'''END''',5,
     >                               IS)) then
          txt132 = '''MARKER''  #E'
          write(lunW,*) txt132(debstr(txt132):finstr(txt132))
          txt132 = '''REBELOTE'''
          write(lunW,*) txt132(debstr(txt132):finstr(txt132))
          txt132 = '399   0.2  99'
          write(lunW,*) txt132(debstr(txt132):finstr(txt132))
          txt132 = '''END'''
          write(lunW,*) txt132(debstr(txt132):finstr(txt132))
          goto 821
        endif

        write(lunW,*) txt132(debstr(txt132):finstr(txt132))   
      goto 811

 821  continue


      close(lunR)
      close(lunW)


c      call system('cp zgoubi_searchCO-Out_MATRIX.dat zgoubi.dat')

      stop
      end
      FUNCTION STRCON(STR,STRIN,NCHAR,
     >                                IS)
      implicit double precision (a-h,o-z)
      LOGICAL STRCON
      CHARACTER STR*(*), STRIN*(*)
C     ------------------------------------------------------------------------
C     .TRUE. if the string STR contains the string STRIN with NCHAR characters
C     at least once.
C     IS = position of first occurence of STRIN in STR
C     ------------------------------------------------------------------------

      INTEGER DEBSTR,FINSTR

      II = 0
      DO 1 I = DEBSTR(STR), FINSTR(STR)
        II = II+1
        IF( STR(I:I+NCHAR-1) .EQ. STRIN ) THEN
          IS = II
          STRCON = .TRUE.
          RETURN
        ENDIF
 1    CONTINUE
      STRCON = .FALSE.
      RETURN
      END
      FUNCTION DEBSTR(STRING)
      implicit double precision (a-h,o-z)
      INTEGER DEBSTR
      CHARACTER * (*) STRING

C     --------------------------------------
C     RENVOIE DANS DEBSTR LE RANG DU
C     1-ER CHARACTER NON BLANC DE STRING,
C     OU BIEN 0 SI STRING EST VIDE ou BLANC.
C     --------------------------------------

      DEBSTR=0
      LENGTH=LEN(STRING)
C      LENGTH=LEN(STRING)+1
1     CONTINUE
        DEBSTR=DEBSTR+1
C        IF(DEBSTR .EQ. LENGTH) RETURN
C        IF (STRING(DEBSTR:DEBSTR) .EQ. ' ') GOTO 1
        IF (STRING(DEBSTR:DEBSTR) .EQ. ' ') THEN
          IF(DEBSTR .EQ. LENGTH) THEN            
            string = ' ' 
            DEBSTR = 1
            RETURN
          ELSE
            GOTO 1
          ENDIF
        ENDIF

      RETURN
      END
      FUNCTION FINSTR(STRING)
      implicit double precision (a-h,o-z)
      INTEGER FINSTR
      CHARACTER * (*) STRING
C     --------------------------------------
C     RENVOIE DANS FINSTR LE RANG DU
C     DERNIER CHARACTER NON BLANC DE STRING,
C     OU BIEN 0 SI STRING EST VIDE ou BLANC.
C     --------------------------------------

      FINSTR=LEN(STRING)+1
1     CONTINUE
        FINSTR=FINSTR-1
        IF(FINSTR .EQ. 0) then
          string = ' '
          finstr = 1
          RETURN
        endif
        IF (STRING(FINSTR:FINSTR) .EQ. ' ') GOTO 1

      RETURN
      END
      subroutine avrorb(jo,maxIter,
     >           iter,xav,xpav,zav,zpav,sav,dav,tav,kex,ok,precX,precXp)
      implicit double precision (a-h,o-z)
      logical existCO, convCO ,ok
      parameter (lunR=13,lunW=14)
      character txt132*132, let*1

      pi = 4.d0 * atan(1.d0)

      dx = 0.d0   !cm
      ddx = 0.1d0
      dxp = .0d0  ! mrad
      ddxp = 1.d0
      ddr = sqrt(ddx * ddx + ddxp * ddxp)
      iter = 1
 2    continue

C Run zgoubi with single traj
      call system('~/zgoubi/current/zgoubi/zgoubi')

C Get initial Traj coord, and average orbit, from zgoubi.res
      call getPUs_Av(
     >       x,xp,z,zp,s,d,t,let,xav,xpav,zav,zpav,sav,dav,tav,kex)
      existCO = kex.eq.1
             write(6,*) ' searchCOs_from1Traj ' ,existCO
      if(existCO) then
C        iter = 1
        write(6,*) 
        write(6,*) ' --------------------------------'
        write(6,*) ' -----  CO #',jo,' does exist...'
        write(6,*) ' --------------------------------'
        write(6,*)
        convCO = (abs(x-xav).le.precX) .and. (abs(xp-xpav).le.precXp) 
c        write(*,*) '  convergence : ',abs(x-xav), abs(xp-xpav)
        if (convCO) then
          ok = .true.
          goto 99
        else
          write(6,fmt='(a,i6,a,1p,2e12.4,a)') 
     >    ' ------------ now seeking precision on CO #',jo,
     >    ',   precision dx, dx'' : ',precX,precXp,' cm, mrad'
          write(6,fmt='(2(a,I2))') '     iteration # ',iter,'/',maxIter
          write(6,*)
          xn = xav
          xpn = xpav 
          zn = zav
          zpn = zpav
          dn = dav
          sn = s
        endif
      else
        write(6,*) ' '
        write(6,*) ' ------------------------------------------------'
        write(6,*) ' -----  Could not find CO #',jo,' trying again...'
        write(6,*) ' ------------------------------------------------'
        write(6,*) ' '
        write(6,fmt='(2(a,I2))') '        iteration # ',iter,'/',maxIter
        write(6,*)
        tta =  float(iter) * 2. * pi / 8.
        dx = float(iter) * ddr *cos(tta)
        xn = x + dx
        dxp = float(iter) * ddr *sin(tta)
        xpn = xp + dxp
        zn = z
        zpn = zp
        dn = d
        sn = s
      endif      
      call system('cp -f zgoubi.dat searchCO.temp2')
      close(lunR)
      close(lunW)
      open(unit=lunR,file='searchCO.temp2')
      open(unit=lunW,file='zgoubi.dat')
C Read/write till "KOBJ"
        do i=1,4
          read(lunR,fmt='(a)') txt132
          write(lunW,fmt='(a)') txt132
        enddo
C Read/write "IMAX IMAXT"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(a)') '1  1'
C Write best co coordinates
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(1p,2e14.6,2e9.1,e9.1,e16.8,4a,i4)') 
     >    xn,xpn,zn,zpn,sn,d,' ','''',let,''' ',jo
        write(6,fmt='(1p,a,2e14.6,2e9.1,e9.1,e16.8,4a,i4)') 
     >   ' New object : ', xn,xpn,zn,zpn,sn,d,' ','''','A','''',jo
C Completes zgoubi.dat with the rest of searchCO.temp2
 1    continue
        read(lunR,fmt='(a)',end=10) txt132
        write(lunW,fmt='(a)') txt132   
      goto 1

 10   continue
      close(lunR)
      close(lunW)
      iter = iter+1
      if(iter.le.maxIter) then
         goto 2
      else
         ok = .false.
         goto 99
      endif

 99   continue
      call system('rm searchCO.temp2')
      return
      end
      subroutine getPUs_Av(
     >    xn,xpn,zn,zpn,sn,dn,tn,let,xav,xpav,zav,zpav,sav,dav,tav,kex)
      implicit double precision (a-h,o-z)
C Get initial Traj coord, and average orbit, from zgoubi.res
      character let*(*)
C Read pick-ups from last pass in zgoubi.res, and cumulates in readPU.out
C This software assumes use of REBELOTE with writes inhibited - so that PU readouts 
C are written in zgoubi.res at pass1 and last pass only. 

      character txt132*132

      logical strcon, pass1
      integer debstr, finstr
      data lunR / 15 /

      open(unit=lunR,file='zgoubi.res') 

      pass1 = .true.

 10   continue

      if(pass1) then
C On cherche la 1ere traj.
        read(lunR,*,end=18,err=19) txt132
        if(strcon(txt132,'OBJET',5,
     >                          IS)) then 
          read(lunR,*,end=18,err=19) txt132
          read(lunR,*,end=18,err=19) txt132
          read(lunR,*,end=18,err=19) txt132
C Read trajectory
          read(lunR,*,end=18,err=19) xn,xpn,zn,zpn,sn,dn,let

        else
          goto 10
        endif
      endif

 12   continue
C On cherche 'PU_average'
      read(lunR,fmt='(a)',end=18,err=19) txt132
c      write(*,*) '                now txt132 is : ', txt132
      if(strcon(txt132,'PU_average',10,
     >                      IS)) then 
        if(pass1) then
          pass1=.false.
          goto 12
        else
          goto 11
        endif
      else
        goto 12
      endif

 11   continue
        write(6,*) ' Now reading PU contents, writing to readPU.out...'
        read(lunR,*,end=18,err=19) txt132

C read units are :                 cm  mrd  cm  mrd  cm      mu_s
        read(lunR,*,end=18,err=19) xav,xpav,zav,zpav,sav,dav,tav

 90     continue
        write(6,*)  ' ' 
        write(6,*)  '----------' 
        write(6,*) '  Objet was : ',xn, xpn, zn, zpn, dn
        write(6,*) '  PU gives  : ',xav,xpav,zav,zpav,sav,dav,tav
        write(6,*)  ' ' 
        write(6,*)  ' ' 
        kex = 1

      goto 99

 18   continue
      kex = 0
c      write(*,*) ' sbr getPUs * End of readPU upon EOFile *    '
      goto 99

 19   continue
      kex = 0
c      write(*,*) ' sbr getPUs * End of readPU upon read error *   '
 99   close(lunR)
      return
      end
      subroutine gotoEnd(lunOut,
     >                          ncoRun)
      implicit double precision (a-h,o-z)
      character*20 txt
      logical strcon

        write(6,*) '  Now go to End of readPU.out'

      ncoRun = 0
C On cherche 'Closed'
 10   read(lunOut,fmt='(A)',end=98,err=99) txt
C      write(6,*) ' txt : ', txt
      if(strcon(txt,'% Closed',8,
     >                         IS)) then 
        ncoRun = ncoRun + 1 
C        write(6,*) '   gotoEnd,  ncoRun = ', ncoRun
      endif
      goto 10

      return

 98   write(6,*) '  * End of readPU/gotoEnd upon EOFile lunOut *    '
      return
 99   write(6,*) '  * End of readPU/gotoEnd upon read error in lunOut *'
      return
      end

      FUNCTION IDLUNI(LN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL IDLUNI

      LOGICAL OPN

      I = 20
 1    CONTINUE
        INQUIRE(UNIT=I,ERR=99,IOSTAT=IOS,OPENED=OPN)
        I = I+1
        IF(I .EQ. 100) GOTO 99
        IF(OPN) GOTO 1
        IF(IOS .GT. 0) GOTO 1
      
      LN = I-1
      IDLUNI = .TRUE.
      RETURN

 99   CONTINUE
      LN = 0
      IDLUNI = .FALSE.
      RETURN
      END
      FUNCTION EMPTY(STR)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL EMPTY
      CHARACTER*(*) STR
C     -----------------------------------------------------
C     .TRUE. if STR is either empty or contains only blanks
C     -----------------------------------------------------

      INTEGER FINSTR
      EMPTY = FINSTR(STR) .EQ. 0
      RETURN
      END

      subroutine readat(lunIn,fname,
     >                        kaseV,nCO,T1,T2,precX,precXp,titl,ierr)
      implicit double precision (a-h,o-z)

      include "READAT.H"

      return
      end

      function gtText(lunR,txt,
     >                         txt132)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      logical gtText
      character(*) txt
      character(*) txt132
      logical strcon
      integer debstr, finstr

      nt = len(txt(debstr(txt):finstr(txt)))

      read(lunR,fmt='(a)',err=99,end=98)  txt132

      dowhile(.not.strcon(txt132,txt(debstr(txt):finstr(txt)),nt, 
     >                                  IS))
        read(lunR,fmt='(a)',err=99,end=98)  txt132
      enddo

      gtText = .true.
      goto 10

 99   continue
      write(6,*) ' PGM getATMDATA/gtText - 99 upon read.' 
      write(6,*) ' text was : ',txt(debstr(txt):finstr(txt))
      gtText = .false.
      goto 10

 98   continue
      write(6,*) ' PGM getATMDATA/gtText - EOF upon read.' 
      write(6,*) ' text was : ',txt(debstr(txt):finstr(txt))
      gtText = .false.
      goto 10

 10   continue
      return
      end





