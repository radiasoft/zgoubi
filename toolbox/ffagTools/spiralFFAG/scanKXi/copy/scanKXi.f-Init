c read tunes from zpop as following from prior exec of zgoubi
      logical exs, strcon, result, existCO
      character txt132*132, txt10*10
      character rep*1
      
      data lunIn, lunOut, lunData / 7, 8, 13 / 

      CHARACTER  HMS*8, DMY*9

      write(6,*) 
      write(6,*) '--------------------------------------------'
      write(6,*) ' scanKXi procedure now launched...' 

C Tunes from multiturn
      kTunes = 1
C Tunes from MATIX
      kTunes = 2

      call system('mv scanKXi.out_COs scanKXi.out_COs_old')
      call system('mv scanKXi.out_Qs scanKXi.out_Qs_old')

C---------- Input data ------------------
      open(unit=lunData,file='scanKXi.data')
      read(lunData,*) xKmi,dK,nK
      read(lunData,*) xiDegMi,dxiDeg, nXi
      read(lunData,*) nCO
      close(lunData)
      if(nK.le.0) stop '  wrong value nK  '
      if(nXi.le.0) stop  '  wrong value nXi '
      xKma = xMi + dK*(nK-1.)
      xiDegMa = xiDegMi + dxiDeg * (nXi-1.)
      write(6,*) '  xKmi,xKma,dK,nK  : ',xKmi,xKma,dK,nK
      write(6,*) '  xiDegMi,xiDegMa,dXi,nXi : ',xiDegMi,xiDegMa,
     >                    dxiDeg, nXi
      write(6,*) '  nCO : ', nCO
C----------------------------------------

C Scratch old scanKXi.out
      inquire(file='scanKXi.out',EXIST=EXS)
      if (exs) then
        open(unit=lunOut,name='scanKXi.out')
        close(unit=lunOut,status='delete')
      endif
      open(unit=lunOut,name='scanKXi.out')

c      dK = (xKma - xKmi)/(nK-1.)
      pi = 4. * atan(1.)
c      dxi = (xiDegMa-xiDegMi)/180.*pi  / (nXi -1.)
      dxi = dxiDeg/180.*pi

      CALL TIME(HMS)
      CALL DATE(DMY)
      WRITE(* ,103) DMY,HMS
 103  FORMAT(/,'  Date :  ',A9,',   time :  ',A8)
      read(hms(1:2),fmt='(i2)') IH     
      read(hms(4:5),fmt='(i2)') MIN
      read(hms(7:8),fmt='(i2)') ISEC      
      read(dmy(1:2),fmt='(i2)') ID
      read(dmy(8:9),fmt='(i2)') IY

      xKi = xKmi - dK
      do k = 1, nK

        result = .true.
        xK = xKi + float(k) *dK
        xi = xiDegMi     /180.*pi
        do ix = 1, nXi

          if(.not. result .and. xiDeg.gt. 50.d0) goto 10

          xiDeg = xi*180./pi
          write(lunOut,fmt='(1p,2e12.4,a,3i6,a)') 
     >    xiDeg,xK, '  ',nCO,ix,k,' spiral angle (rad), k, # co, ix, k'

C Change K and xi values in lattice.data
          call change('lattice.data','lattice.data_temp',xK,xiDeg,
     >                                              nCellI,r0I,pfI,gapI)

          open(unit=34,file='tempKXi.dum')
          write(34,*) xK,xiDeg
          close(34)

C Run geneMap = generate field map, given K, xi ; 
C geneMap also generates initial coordinates near closed orbits 
C       together with data file for zgoubi
          call ellap(id,ih,min,ix,k,nK,nXi)
          call system('ln -sf lattice.data_temp geneMap.data')
          call system('~/zgoubi/struct/ffag/tools/spiralFFAG/geneFieldMa
     >p/geneMap')

C Starting from initial coordinates near closed orbits, look for precise co's
C First, copy zgoubi.dat as generated by geneMap, into input file for searchCO
C          searchCO.temp is a signal liable to be sent by searchCO, means no CO found
          call system('rm -f searchCO.temp')
          call ellap(id,ih,min,ix,k,nK,nXi)
          call system('cp -f zgoubi_geneMap-Out.dat 
     >                                        zgoubi_searchCO-In.dat')
          call system('~/zgoubi/struct/ffag/tools/spiralFFAG/geneFieldMa
     >p/searchCO')
          call system('cat searchCO.out_COs >> scanKXi.out_COs')
          inquire(file='searchCO.temp',exist=exs)
          existCO = .not. exs

          if(existCO) then
            if(kTunes.eq.1) then
C Starting from closed orbits, compute tunes by FT
              call ellap(id,ih,min,ix,k,nK,nXi)
              call system('cp -f zgoubi_searchCO-Out.dat zgoubi.dat ')
              call track
              call system('~/zgoubi/struct/ffag/tools/spiralFFAG/geneFie
     >ldMap/tunesFromFai')
            elseif(kTunes.eq.2) then
C Compute tunes by MATRIX
              call ellap(id,ih,min,ix,k,nK,nXi)
              call system('cp -f zgoubi_searchCO-Out_MATRIX.dat 
     >                                                   zgoubi.dat ')
              call track
              call system('~/zgoubi/struct/ffag/tools/spiralFFAG/geneFie
     >ldMap/tunesFromMatrix')
            endif

            call system('cat tunes.out >> scanKXi.out_Qs')
          endif

          xi = xi + dxi
 10       continue

        enddo  !xi
      enddo  !k

      close(lunOut)

      stop
      end

      FUNCTION STRCON(STR,STRIN,NCHAR,
     >                                IS)
      LOGICAL STRCON
      CHARACTER STR*(*), STRIN*(*)
C     ------------------------------------------------------------------------
C     .TRUE. if the string STR contains the string STRIN with NCHAR characters
C     at least once.
C     IS = position of first occurence of STRIN in STR
C     ------------------------------------------------------------------------

      INTEGER DEBSTR,FINSTR

      II = 0
      DO 1 I = DEBSTR(STR), FINSTR(STR)
        II = II+1
        IF( STR(I:I+NCHAR-1) .EQ. STRIN ) THEN
          IS = II
          STRCON = .TRUE.
          RETURN
        ENDIF
 1    CONTINUE
      STRCON = .FALSE.
      RETURN
      END
      FUNCTION DEBSTR(STRING)
      INTEGER DEBSTR
      CHARACTER * (*) STRING

C     --------------------------------------
C     RENVOIE DANS DEBSTR LE RANG DU
C     1-ER CHARACTER NON BLANC DE STRING,
C     OU BIEN 0 SI STRING EST VIDE ou BLANC.
C     --------------------------------------

      DEBSTR=0
      LENGTH=LEN(STRING)
C      LENGTH=LEN(STRING)+1
1     CONTINUE
        DEBSTR=DEBSTR+1
C        IF(DEBSTR .EQ. LENGTH) RETURN
C        IF (STRING(DEBSTR:DEBSTR) .EQ. ' ') GOTO 1
        IF (STRING(DEBSTR:DEBSTR) .EQ. ' ') THEN
          IF(DEBSTR .EQ. LENGTH) THEN
            DEBSTR = 0
            RETURN
          ELSE
            GOTO 1
          ENDIF
        ENDIF

      RETURN
      END
      FUNCTION FINSTR(STRING)
      INTEGER FINSTR
      CHARACTER * (*) STRING
C     --------------------------------------
C     RENVOIE DANS FINSTR LE RANG DU
C     DERNIER CHARACTER NON BLANC DE STRING,
C     OU BIEN 0 SI STRING EST VIDE ou BLANC.
C     --------------------------------------

      FINSTR=LEN(STRING)+1
1     CONTINUE
        FINSTR=FINSTR-1
        IF(FINSTR .EQ. 0) RETURN
        IF (STRING(FINSTR:FINSTR) .EQ. ' ') GOTO 1

      RETURN
      END
      subroutine track
      write(6,*) 
      write(6,*) '-----'
      write(6,*) ' Now tracking multiturn, busy...' 
      call system('~/zgoubi/source/zgoubi')
      return
      end
      subroutine change(nameIn,nameOut,xK,xiDeg, 
     >                                          nCell,r0,pf,gap)
      character*(*) nameIn, nameOut
      character*132 txt132
      logical strcon
      integer debstr

      open(unit=9,name=nameIn)
      open(unit=10,name=nameOut)

      read(9,fmt='(a)',end=99)  txt132  !! reads comment line. Next line is to be K
      write(10,fmt='(a)') txt132

      read(9,fmt='(a)',end=99) txt132   !! line that contains K=***
      write(10,fmt='(a,1p,g12.4,a)') 'K = ',xK, '!do not move this line'

      read(9,fmt='(a)',end=99) txt132   !! line that contains xiDeg=***
      write(10,fmt='(a,1p,g12.4,a)') 'xiDeg = ',xiDeg, 
     > '!do not move this line'

      read(9,fmt='(a)',end=99)  txt132
      write(10,fmt='(a)') txt132
      if (STRCON(txt132,'=',1,
     >                       IS)) then
        read(txt132(IS+1:132),*) nCell
      endif 
      read(9,fmt='(a)',end=99)  txt132
      write(10,fmt='(a)') txt132
      if (STRCON(txt132,'=',1,
     >                       IS)) then
        read(txt132(IS+1:132),*) r0
      endif
      read(9,fmt='(a)',end=99)  txt132
      write(10,fmt='(a)') txt132
      if (STRCON(txt132,'=',1,
     >                       IS)) then
        read(txt132(IS+1:132),*) pf
      endif
      read(9,fmt='(a)',end=99)  txt132
      write(10,fmt='(a)') txt132
      if (STRCON(txt132,'=',1,
     >                       IS)) then
        read(txt132(IS+1:132),*) gap
      endif
 1    read(9,fmt='(a)',end=99)  txt132
      write(10,fmt='(a)') txt132
      goto 1
 99   close(9)
      close(10)
      return
      end
      subroutine ellap(id,ih,min,ix,k,nK,nXi)
      CHARACTER  HMS*8, DMY*9
          WRITE(6,*) ' ' 
          WRITE(6,*) ' #K,  #xi : ',k,'/',nK,'      ',ix,'/',nXi
          CALL TIME(HMS(1:8))
          CALL DATE(DMY(1:9))
          WRITE(6   ,103) DMY,HMS
 103      FORMAT('  Date :  ',A9,',   time :  ',A8)
          read(hms(1:2),fmt='(i2)') IHC     
          read(hms(4:5),fmt='(i2)') MINC
          read(hms(7:8),fmt='(i2)') ISECC      
          read(dmy(1:2),fmt='(i2)') IDC
          read(dmy(8:9),fmt='(i2)') IYC
          elap=float(idc-id)*86400.d0+float(ihc-ih)*3600.d0
     >               +float(minc-min)*60.d0+float(idc-id)*1.d0
          WRITE(6,*) ' Ellapsed time : ',elap,' sec.'
          write(6,*) ' Estimated remaining time : ',  
     >      elap/float(ix*k)*float(nK-k)*float(nXi-ix)/3600.d0,'  hours'
          WRITE(6,*)
c               pause
      return
      end
