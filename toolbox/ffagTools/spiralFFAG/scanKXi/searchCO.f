C      subroutine srchCO(nCO,xK,xiDeg)
C Starting from initial coordinates near closed orbits, as read from input file 
C zgoubi.dat (possibly generated by geneMap), look for precise co's
      implicit double precision (a-h,o-z)

      parameter (lunR=11,lunW=12,lunIn=15)
      character txt132*132, let*1
      parameter (nCOmx=10001, maxIter=20)
      dimension x(nCOmx),xp(nCOmx),z(nCOmx),
     >                   zp(nCOmx),s(nCOmx),d(nCOmx),let(nCOmx)
      dimension clorb(7,nCOmx)

      logical ok, strcon, first, idluni
      data ok, first, kaseV / .false., .true., 1 /

C Requested precision on co (cm, mrad)
C Careful here :  PREC MUST BE COMPATIBLE with precision on x and xp as read in zgoubi.res
      parameter (precX=.0001, precXp=.001)
      integer debstr, finstr
      
C ----------------- Input data
      call system('ln -sf lattice.data searchCO.data')
      call readat(lunIn,'searchCO.data',
     >                                  kaseV)
C-----------------------------

      open(unit=lunR,file='zgoubi_searchCO-In.dat')

      cl9 = 2.99792458D8 / 1.d9

      jo = 1
      jok = 0
 2    continue

        rewind(lunR)
        open(unit=lunW,file='zgoubi.dat')
        rewind(lunW)

C Read till "KOBJ"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(a)') 
     >  'Data generated by searchCO '
          read(lunR,fmt='(a)') txt132
          write(lunW,*) txt132
          read(lunR,fmt='(a)') txt132
          write(lunW,*) txt132
          read(txt132,*) BORO
          write(*,*) ' Reference rigidity BRho = ',BORO/1000.d0,' T.m' 
          read(lunR,fmt='(a)') txt132
          write(lunW,*) txt132
C Read till "IMAX IMAXT"
          read(lunR,*) nCO, imaxt
          if(nCO.gt.nCOmx) stop ' Too many co''s...'
          if(nCO.lt.1) stop ' No  co in zgoubi_searchCO-In.dat !!'
          txt132 = ' 1  1'
          write(lunW,*) txt132
C Read all initial traj present in zgoubi_searchCO-In.dat
        do i=1,nCO
          read(lunR,*) x(i),xp(i),z(i),zp(i),s(i),d(i),let(i)
        enddo
C Retains only one initial traj at a time
        write(lunW,fmt='(1p,2e14.6,2e9.1,e9.1,e14.7,4a,i4)') 
     >    x(jo),xp(jo),z(jo),zp(jo),s(jo),d(jo),' ','''',let(jo),'''',jo
        write(6,*) 
        write(6,*) ' ---------    New trajectory :'
        write(6,fmt='(1p,2e14.6,2e9.1,e9.1,e14.7,4a,i4)') 
     >    x(jo),xp(jo),z(jo),zp(jo),s(jo),d(jo),' ','''',let(jo),'''',jo
        write(6,*)
C write first line with "1's" 
        read(lunR,fmt='(a)',end=10) txt132
        write(lunW,*) txt132   
C Completes zgoubi.dat with the rest of zgoubi_searchCO-In.dat
 1      continue
          read(lunR,fmt='(a)',end=10) txt132
          write(lunW,*) txt132   

          if(strcon(txt132,'1 1 1 1 1 1 1 1 1 1',19,
     >                                              IS)) then 
C           do not write possible subsquent lines of "1's"
              backspace(lunW)
          elseif(strcon(txt132,'PARTICUL',8,
     >                                  IS)) then 
            read(lunR,fmt='(a)',end=10) txt132
            write(lunW,*) txt132               
            read(txt132,*) am,q
            write(6,*) ' particle mass and charge : ', am, q
            P0 = BORO*CL9

          else

            if(strcon(txt132,'''REBELOTE''',10,
     >                                         IS)) then
              txt132 = '9   0.2  99'
C              txt120 = '29   0.1  99'
              write(lunW,*) txt132
              txt132 = '''END'''
              write(lunW,*) txt132
              goto 10

            elseif(strcon(txt132,'''END''',5,
     >                                       IS)) then
              backspace(lunW)
              txt132 = '''REBELOTE'''
              write(lunW,*) txt132
              txt132 = '9   0.2  99'
C              txt120 = '29   0.1  99'
              write(lunW,*) txt132
              txt132 = '''END'''
              write(lunW,*) txt132
              goto 10

            endif
          endif

        goto 1

 10     continue
        close(lunW)

        call avrorb(jo,maxIter,
     >                xav,xpav,zav,zpav,sav,dav,tav,kex,ok,precX,precXp)
 
        if(ok) then 
          jok = jok + 1
          write(6,*) 
          write(6,fmt='(a,i4,a,a,2f9.4,a,a,i4,a)') 
     >    ' ---------    Found ',jok,' average orbits ',
     >    '(precision dx, dx'' : ',precX,precXp,' cm, mrad) ; ',
     >    '  now c.o. #',jo,' :'
          write(6,fmt='(1p,2e14.6,2e9.1,e9.1,e12.4,e14.6)') 
     >                          xav,xpav,zav,zpav,sav,dav,tav
          write(6,*)
          clorb(1,jok) = xav
          clorb(2,jok) = xpav
          if(kaseV.eq.1) then
            clorb(3,jok) = .0001 !!!!!zav
          else
            clorb(3,jok) = .0
          endif
          clorb(4,jok) = .0 !!!!zpav
          clorb(5,jok) = .0 !!!sav
          clorb(6,jok) = dav
          clorb(7,jok) = tav
        endif

        write(6,*) ' jo / nCO :    ', jo,' / ',nCO
        if(jo.ge. nCO) goto 60
        jo = jo+1
      goto 2

 60   continue
      close(lunR)

Create  zgoubi_searchCO-Out.dat  containing computed closed orbits
      open(unit=lunR,file='zgoubi_searchCO-In.dat')
      open(unit=lunW,file='zgoubi_searchCO-Out.dat')
C Read/write till "KOBJ"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(a)') 
     >  'Data generated by searchCO '
        do i=1,3
          read(lunR,fmt='(a)') txt132
          write(lunW,fmt='(a)') txt132
        enddo
C Read/write "IMAX IMAXT"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(i3,a)') jok,'  1'
C Write all co coordinates (clorb(i,j)) into zgoubi_searchCO-Out.dat
        do j=1,jok
          read(lunR,fmt='(a)') txt132
          pj = p0 * clorb(6,j)
          Tj = sqrt(pj*pj+am*am) - am
          write(lunW,fmt='(1p,2e14.6,2e9.1,e9.1,e16.8,4a,f12.2,a)') 
     >    clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),
     >    clorb(5,j), clorb(6,j),' ','''',let(j),''' ',Tj/10.,' MeV'
        enddo
        do j=1,nCO-jok
          read(lunR,fmt='(a)') txt132
        enddo
C Completes zgoubi_searchCO-Out.dat with the rest of zgoubi_searchCO-In.dat
 61   continue
        read(lunR,fmt='(a)',end=62) txt132
        write(lunW,*) txt132   
        if(strcon(txt132,'REBELOTE',8,
     >                                IS)) then 
          read(lunR,fmt='(a)',end=62) txt132
C 200 tours pour recherche tunes
          write(lunW,*) ' 199  0.2 99 '
        elseif(strcon(txt132,'''END''',5,
     >                                     IS)) then
          backspace(lunW)
            txt132 = '''REBELOTE'''
            write(lunW,*) txt132
            txt132 = ' 199   0.2  99'
            write(lunW,*) txt132
            txt132 = '''END'''
            write(lunW,*) txt132

        endif
      goto 61
 62   close(lunR)
      close(lunW)

      write(*,*) ' '
      write(*,*) '--------------'
      write(*,fmt='(a,i2,a,i2,a)') 'zgoubi_searchCO-Out.dat contains ',
     >jok,' co''s below (over ',nCO,' trajectories launched) :'
      do j=1,jok
        pj = p0 * clorb(6,j)
        Tj = sqrt(pj*pj+am*am) - am
        write(6,fmt='(1p, 2e14.6, 2e9.1, e16.8,
     >        e12.4, e12.4, 4a, f12.2, a)') 
     >  clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),
     >  clorb(5,j), clorb(6,j),clorb(7,j),
     >        ' ','''',let(j),''' ',Tj/10.,' MeV'
      enddo
      write(*,*) ' '
      if(first) then
        call system('mv -f searchCO.out_COs  searchCO.out_COs_old')
        first = .false.
      endif
      open(unit=33,file='searchCO.temp')
      do j=1,jok
        pj = p0 * clorb(6,j)
        Tj = sqrt(pj*pj+am*am) - am
        write(33,fmt='(1p, 2e14.6, 2e9.1, e16.8,
     >        e13.5, e16.8, 4a, f12.2, a, 2e12.4)') 
     >  clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),
     >  clorb(5,j), clorb(6,j), clorb(7,j),
     >       ' ','''',let(j),''' ',Tj/10.,' MeV' !,xK,xiDeg
      enddo
      write(33,*) ' '
      close(33)
      call system('cat searchCO.temp >> searchCO.out_COs')
      call system('rm searchCO.temp')

Create zgoubi_searchCO-Out_MATRIX.dat including MATRIX and containing closed orbits
      open(unit=lunR,file='zgoubi_searchCO-In.dat')
      open(unit=lunW,file='zgoubi_searchCO-Out_MATRIX.dat')
C Read/write till "KOBJ"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(a)') 
     >  'Data generated by searchCO '
        do i=1,2
          read(lunR,fmt='(a)') txt132
          write(lunW,fmt='(a)') txt132
        enddo
C Read "KOBJ", write "5.xx"
        read(lunR,fmt='(a)') txt132
        if    (jok.lt.  1) then 
          if (idluni(itemp)) then
            open(unit=itemp,file='searchCO.temp')
            write(itemp,*) ' 0   CO out of searchCO !'
            close(itemp)
          endif
          stop ' Prgrm searchCO. No CO found. '
        elseif(jok.eq.  1) then 
          write(lunW,fmt='(a)') '5'
        elseif(jok.le.  9) then 
          write(lunW,fmt='(a3,I1)') '5.0',jok
        elseif(jok.le. 99) then
          write(lunW,fmt='(a2,I2)') '5.',jok
        else
          stop ' Prgrm searchCO. Too many co''s'
        endif
C Read "IMAX IMAXT", write sampling
        read(lunR,fmt='(a)') txt132
C Changed Dec. 2007 : too small dx, dz yield fluctuations in tunes due to truncation
C        write(lunW,*) '.001 .001 .001 .001 0. .001  '
        write(lunW,*) '.01 .1 .01 .1 0. .001  '
C Write all co coordinates (clorb(i,j)) into zgoubi_searchCO-Out_MATRIX.dat
        do j=1,jok
          read(lunR,fmt='(a)') txt132
          pj = p0 * clorb(6,j)
          Tj = sqrt(pj*pj+am*am) - am
          write(lunW,fmt=
     >                '(1p,2e14.6,2e9.1,e9.1,2e16.8,4a,f12.2,a)') 
     >    clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),
     >     clorb(5,j), clorb(6,j), clorb(7,j),
     >          ' ','''',let(j),''' ',Tj/10.,' MeV'
        enddo
        do j=1,nCO-jok
          read(lunR,fmt='(a)') txt132
        enddo
C Completes zgoubi_searchCO-Out_MATRIX.dat with the rest of zgoubi_searchCO-In.dat
C except for introducing MATRIX

C------- First get read of '1 1 1 1 ...'
 619    read(lunR,fmt='(a)') txt132
        txt132 = txt132(debstr(txt132):finstr(txt132))
        if(txt132(1:1).ne.'''') then 
          goto 619
        else
          backspace(lunR)
        endif

 611    continue
        read(lunR,fmt='(a)',end=621,err=621) txt132

        if(strcon(txt132,'''END''',5,
     >                               IS)) then 
          write(lunW,*) '''MATRIX'''
          write(lunW,*) ' 1  11'
          write(lunW,*) '''FAISCEAU'''
          write(lunW,*) '''END'''
          GOTO 621
        elseif(strcon(txt132,'''REBELOTE''',10,
     >                                         IS)) then 
C          skip
          read(lunR,fmt='(a)',end=621,err=621) txt132
        else
          write(lunW,*) txt132   
        endif
      goto 611

 621  close(lunR)
      close(lunW)

Create zgoubi_searchCO-Out_periodicParam.dat 
      open(unit=lunR,file='zgoubi_searchCO-In.dat')
      open(unit=lunW,file='zgoubi_searchCO-Out_periodicParam.dat')
C Read/write till "KOBJ"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(a)') 
     >  'Data generated by searchCO '
        do i=1,2
          read(lunR,fmt='(a)') txt132
          write(lunW,fmt='(a)') txt132
        enddo
C Read "KOBJ", write "2" 
        read(lunR,fmt='(a)') txt132
        if    (jok.lt.  1) then 
          if (idluni(itemp)) then
            open(unit=itemp,file='searchCO.temp')
            write(itemp,*) ' 0   CO out of searchCO !'
            close(itemp)
          endif
          stop ' Prgrm searchCO. No CO found. '
        else
          write(lunW,fmt='(a2,I2)') '2'
        endif
C Read "IMAX IMAXT",  write "3*nCO 1" 
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(I4,a)') 3*jok,'   1'
C Write all co coordinates (clorb(i,j)) and +/- samples
        do j=1,jok
          read(lunR,fmt='(a)') txt132
          pj = p0 * clorb(6,j)
          Tj = sqrt(pj*pj+am*am) - am
          write(lunW,fmt=
     >      '(1p,2e16.8,2e9.1,e9.1,e16.8,4a,f12.2,a)') 
     >      clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),
     >      clorb(5,j), clorb(6,j),' ','''',let(j),''' ',Tj/10.,' MeV'
          write(lunW,fmt=
     >      '(1p,2e16.8,2e9.1,e9.1,e16.8,4a)') 
     >      clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),
     >      clorb(5,j), clorb(6,j)*1.001,' ','''',let(j),''''
          write(lunW,fmt=
     >      '(1p,2e16.8,2e9.1,e9.1,e16.8,4a)') 
     >      clorb(1,j), clorb(2,j), clorb(3,j), clorb(4,j),
     >      clorb(5,j), clorb(6,j)*0.999,' ','''',let(j),''''
        enddo
        do j=1,nCO-jok
          read(lunR,fmt='(a)') txt132
        enddo

C Write ' 1 1 1 1 1 ...'
        read(lunR,fmt='(a)',end=721,err=721) txt132
        write(lunW,*) ('1 ',i=1,3*jok)    

C Completes zgoubi_searchCO-Out_periodicParam.dat with the rest of zgoubi_searchCO-In.dat
 711    continue
        read(lunR,fmt='(a)',end=721,err=721) txt132
        if(strcon(txt132,'''END''',5,
     >                               IS)) then
          backspace(lunW)
          write(lunW,*) '''MARKER''  #END'
          write(lunW,*) '''FAISCEAU'''
        endif
        write(lunW,*) txt132   
      goto 711
 721  continue

            txt132 = ' '
            write(lunW,*) txt132
            txt132 = ' '
            write(lunW,*) txt132
            txt132 = '''REBELOTE'''
            write(lunW,*) txt132
            txt132 = '99   0.2  99'
            write(lunW,*) txt132

      close(lunR)
      close(lunW)

c      call system('cp zgoubi_searchCO-Out_MATRIX.dat zgoubi.dat')

      stop
      end
      FUNCTION STRCON(STR,STRIN,NCHAR,
     >                                IS)
      implicit double precision (a-h,o-z)
      LOGICAL STRCON
      CHARACTER STR*(*), STRIN*(*)
C     ------------------------------------------------------------------------
C     .TRUE. if the string STR contains the string STRIN with NCHAR characters
C     at least once.
C     IS = position of first occurence of STRIN in STR
C     ------------------------------------------------------------------------

      INTEGER DEBSTR,FINSTR

      II = 0
      DO 1 I = DEBSTR(STR), FINSTR(STR)
        II = II+1
        IF( STR(I:I+NCHAR-1) .EQ. STRIN ) THEN
          IS = II
          STRCON = .TRUE.
          RETURN
        ENDIF
 1    CONTINUE
      STRCON = .FALSE.
      RETURN
      END
      FUNCTION DEBSTR(STRING)
      implicit double precision (a-h,o-z)
      INTEGER DEBSTR
      CHARACTER * (*) STRING

C     --------------------------------------
C     RENVOIE DANS DEBSTR LE RANG DU
C     1-ER CHARACTER NON BLANC DE STRING,
C     OU BIEN 0 SI STRING EST VIDE ou BLANC.
C     --------------------------------------

      DEBSTR=0
      LENGTH=LEN(STRING)
C      LENGTH=LEN(STRING)+1
1     CONTINUE
        DEBSTR=DEBSTR+1
C        IF(DEBSTR .EQ. LENGTH) RETURN
C        IF (STRING(DEBSTR:DEBSTR) .EQ. ' ') GOTO 1
        IF (STRING(DEBSTR:DEBSTR) .EQ. ' ') THEN
          IF(DEBSTR .EQ. LENGTH) THEN
            DEBSTR = 0
            RETURN
          ELSE
            GOTO 1
          ENDIF
        ENDIF

      RETURN
      END
      FUNCTION FINSTR(STRING)
      implicit double precision (a-h,o-z)
      INTEGER FINSTR
      CHARACTER * (*) STRING
C     --------------------------------------
C     RENVOIE DANS FINSTR LE RANG DU
C     DERNIER CHARACTER NON BLANC DE STRING,
C     OU BIEN 0 SI STRING EST VIDE ou BLANC.
C     --------------------------------------

      FINSTR=LEN(STRING)+1
1     CONTINUE
        FINSTR=FINSTR-1
        IF(FINSTR .EQ. 0) RETURN
        IF (STRING(FINSTR:FINSTR) .EQ. ' ') GOTO 1

      RETURN
      END
      subroutine avrorb(jo,maxIter,
     >                xav,xpav,zav,zpav,sav,d,tav,kex,ok,precX,precXp)
      implicit double precision (a-h,o-z)
      logical existCO, convCO ,ok
      parameter (lunR=13,lunW=14)
      character txt132*132, let*1

      pi = 4. * atan(1.)

      dx = 0.   !cm
      ddx = 0.1
      dxp = .0  ! mrad
      ddxp = 1.
      ddr = sqrt(ddx * ddx + ddxp * ddxp)
      iter = 1
 2    continue

C Run zgoubi with single traj
      call system('~/zgoubi/source/zgoubi')

C Get initial Traj coord, and average orbit, from zgoubi.res
      call getPUs_Av(
     >          x,xp,z,zp,s,d,t,let,xav,xpav,zav,zpav,sav,tav,kex)
      existCO = kex.eq.1
      if(existCO) then
        iter = 1
        write(6,*) 
        write(6,*) ' --------------------------------'
        write(6,*) ' -----  CO #',jo,' does exist...'
        write(6,*) ' --------------------------------'
        write(6,*)
        convCO = (abs(x-xav).le.precX) .and. (abs(xp-xpav).le.precXp) 
c        write(*,*) '  convergence : ',abs(x-xav), abs(xp-xpav)
        if (convCO) then
          ok = .true.
          goto 99
        else
          write(6,fmt='(a,i6,a,1p,2e12.4,a)') 
     >    ' ------------ now seeking precision on CO #',jo,
     >    ',   precision dx, dx'' : ',precX,precXp,' cm, mrad'
          write(6,fmt='(2(a,I2))') '     iteration # ',iter,'/',maxIter
          write(6,*)
          xn = xav
          xpn = xpav 
          zn = zav
          zpn = zpav
          sn = s
        endif
      else
        write(6,*) ' '
        write(6,*) ' ------------------------------------------------'
        write(6,*) ' -----  Could not find CO #',jo,' trying again...'
        write(6,*) ' ------------------------------------------------'
        write(6,*) ' '
        write(6,fmt='(2(a,I2))') '        iteration # ',iter,'/',maxIter
        write(6,*)
        tta =  float(iter) * 2. * pi / 8.
        dx = float(iter) * ddr *cos(tta)
        xn = x + dx
        dxp = float(iter) * ddr *sin(tta)
        xpn = xp + dxp
        zn = z
        zpn = zp
        sn = s
      endif      
      call system('cp -f zgoubi.dat searchCO.temp2')
      close(lunR)
      close(lunW)
      open(unit=lunR,file='searchCO.temp2')
      open(unit=lunW,file='zgoubi.dat')
C Read/write till "KOBJ"
        do i=1,4
          read(lunR,fmt='(a)') txt132
          write(lunW,fmt='(a)') txt132
        enddo
C Read/write "IMAX IMAXT"
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(a)') '1  1'
C Write best co coordinates
        read(lunR,fmt='(a)') txt132
        write(lunW,fmt='(1p,2e14.6,2e9.1,e9.1,e16.8,4a,i4)') 
     >    xn,xpn,zn,zpn,sn,d,' ','''',let,''' ',jo
        write(*,fmt='(1p,a,2e14.6,2e9.1,e9.1,e16.8,4a,i4)') 
     >   ' New object : ', xn,xpn,zn,zpn,sn,d,' ','''','A','''',jo
C Completes zgoubi.dat with the rest of searchCO.temp2
 1    continue
        read(lunR,fmt='(a)',end=10) txt132
        write(lunW,fmt='(a)') txt132   
      goto 1

 10   continue
      close(lunR)
      close(lunW)
      iter = iter+1
      if(iter.le.maxIter) then
         goto 2
      else
         ok = .false.
         goto 99
      endif

 99   continue
      call system('rm searchCO.temp2')
      return
      end
      subroutine getPUs_Av(
     >        xn,xpn,zn,zpn,sn,dn,tn,let,xav,xpav,zav,zpav,sav,tav,kex)
      implicit double precision (a-h,o-z)
C Get initial Traj coord, and average orbit, from zgoubi.res
      character let*(*)
C Read pick-ups from last pass in zgoubi.res, and cumulates in readPU.out
C This software assumes use of REBELOTE with writes inhibited - so that PU readouts 
C are written in zgoubi.res at pass1 and last pass only. 

      character txt132*132

      logical strcon, pass1
      integer debstr, finstr
      data lunR / 15 /

      open(unit=lunR,name='zgoubi.res') 

      pass1 = .true.

 10   continue

      if(pass1) then
C On cherche la 1ere traj.
        read(lunR,*,end=18,err=19) txt132
        if(strcon(txt132,'OBJET',5,
     >                          IS)) then 
          read(lunR,*,end=18,err=19) txt132
          read(lunR,*,end=18,err=19) txt132
          read(lunR,*,end=18,err=19) txt132
C Read trajectory
          read(lunR,*) xn,xpn,zn,zpn,sn,dn,let
c          write(*,*) '****** OBJET : ',xn,xpn,zn,zpn,s,d,' ',let
        else
          goto 10
        endif
      endif

 12   continue
C On cherche 'PU_average'
      read(lunR,*,end=18,err=19) txt132
c      write(*,*) '                now txt132 is : ', txt132
      if(strcon(txt132,'PU_average',10,
     >                      IS)) then 
        if(pass1) then
          pass1=.false.
          goto 12
        else
          goto 11
        endif
      else
        goto 12
      endif

 11   continue
        write(6,*) ' Now reading PU contents, writing to readPU.out...'
        read(lunR,*,end=18,err=19) txt132

C read units are :                 cm  mrd  cm  mrd  cm      mu_s
        read(lunR,*,end=18,err=19) xav,xpav,zav,zpav,sav,dav,tav

 90     continue
        write(6,*)  ' ' 
        write(6,*)  '----------' 
        write(*,*) '  Objet was : ',xn, xpn, zn, zpn, dn
        write(*,*) '  PU gives  : ',xav,xpav,zav,zpav,sav,dav,tav
        write(6,*)  ' ' 
        write(6,*)  ' ' 
        kex = 1
c             pause
      goto 99

 18   continue
      kex = 0
c      write(*,*) ' sbr getPUs * End of readPU upon EOFile *    '
      goto 99

 19   continue
      kex = 0
c      write(*,*) ' sbr getPUs * End of readPU upon read error *   '
 99   close(lunR)
      return
      end
      subroutine gotoEnd(lunOut,
     >                          ncoRun)
      implicit double precision (a-h,o-z)
      character*20 txt
      logical strcon

        write(6,*) '  Now go to End of readPU.out'

      ncoRun = 0
C On cherche 'Closed'
 10   read(lunOut,fmt='(A)',end=98,err=99) txt
C      write(6,*) ' txt : ', txt
      if(strcon(txt,'% Closed',8,
     >                         IS)) then 
        ncoRun = ncoRun + 1 
C        write(6,*) '   gotoEnd,  ncoRun = ', ncoRun
      endif
      goto 10

      return

 98   write(6,*) '  * End of readPU/gotoEnd upon EOFile lunOut *    '
      return
 99   write(6,*) '  * End of readPU/gotoEnd upon read error in lunOut *'
      return
      end

      FUNCTION IDLUNI(LN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL IDLUNI

      LOGICAL OPN

      I = 20
 1    CONTINUE
        INQUIRE(UNIT=I,ERR=99,IOSTAT=IOS,OPENED=OPN)
        I = I+1
        IF(I .EQ. 100) GOTO 99
        IF(OPN) GOTO 1
        IF(IOS .GT. 0) GOTO 1
      
      LN = I-1
      IDLUNI = .TRUE.
      RETURN

 99   CONTINUE
      LN = 0
      IDLUNI = .FALSE.
      RETURN
      END
      subroutine readat(lunIn,fname,
     >                              kaseV)
      implicit double precision (a-h,o-z)

      include "READAT.H"

C      open(unit=lunIn,file='searchCO.data')

      return
      end





