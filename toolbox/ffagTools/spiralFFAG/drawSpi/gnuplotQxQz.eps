%!PS-Adobe-2.0 EPSF-2.0
%%Title: gnuplotQxQz.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Sat Dec  9 15:31:26 2006
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 420 M
6248 0 V
1.000 UL
LTb
714 420 M
63 0 V
6185 0 R
-63 0 V
630 420 M
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 945 M
6248 0 V
1.000 UL
LTb
714 945 M
63 0 V
6185 0 R
-63 0 V
630 945 M
gsave 0 setgray
( 0.5) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 1470 M
6248 0 V
1.000 UL
LTb
714 1470 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 1) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 1995 M
6248 0 V
1.000 UL
LTb
714 1995 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 1.5) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 2520 M
6248 0 V
1.000 UL
LTb
714 2520 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 2) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 3045 M
6248 0 V
1.000 UL
LTb
714 3045 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 2.5) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 3570 M
6248 0 V
1.000 UL
LTb
714 3570 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 3) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 4095 M
6248 0 V
1.000 UL
LTb
714 4095 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 3.5) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 4620 M
6248 0 V
1.000 UL
LTb
714 4620 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
gsave 0 setgray
( 4) Rshow
grestore
1.000 UL
LTb
1.000 UL
LTa
714 420 M
0 4200 V
1.000 UL
LTb
714 420 M
0 63 V
0 4137 R
0 -63 V
714 280 M
gsave 0 setgray
( 1) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
1755 420 M
0 4200 V
1.000 UL
LTb
1755 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
( 1.5) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
2797 420 M
0 4200 V
1.000 UL
LTb
2797 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
( 2) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
3838 420 M
0 4200 V
1.000 UL
LTb
3838 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
( 2.5) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
4879 420 M
0 3997 V
0 140 R
0 63 V
1.000 UL
LTb
4879 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
( 3) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
5921 420 M
0 3997 V
0 140 R
0 63 V
1.000 UL
LTb
5921 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
( 3.5) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTa
6962 420 M
0 4200 V
1.000 UL
LTb
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
( 4) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
714 420 M
6248 0 V
0 4200 V
-6248 0 V
714 420 L
LTb
140 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Qz) Cshow
grestore
grestore
LTb
3838 70 M
gsave 0 setgray
(Qx) Cshow
grestore
LTb
3838 4830 M
gsave 0 setgray
(Tune diagram) Cshow
grestore
1.000 UP
1.500 UP
1.000 UL
LT0
LTb
6311 4487 M
gsave 0 setgray
("scanKXi.out" using 4:5) Rshow
grestore
LT0
777 1692 Box
777 1697 Box
778 1713 Box
779 1740 Box
781 1779 Box
783 1830 Box
786 1894 Box
790 1972 Box
795 2067 Box
802 2181 Box
809 2318 Box
819 2487 Box
832 2696 Box
848 2967 Box
869 3345 Box
897 4021 Box
988 1600 Box
988 1606 Box
989 1623 Box
990 1652 Box
992 1693 Box
995 1747 Box
999 1814 Box
1004 1895 Box
1009 1993 Box
1017 2111 Box
1026 2252 Box
1038 2424 Box
1052 2636 Box
1071 2908 Box
1096 3282 Box
1129 3921 Box
1183 1502 Box
1183 1508 Box
1184 1527 Box
1186 1558 Box
1188 1602 Box
1192 1659 Box
1196 1729 Box
1201 1815 Box
1208 1918 Box
1216 2039 Box
1227 2185 Box
1240 2360 Box
1257 2575 Box
1278 2848 Box
1306 3220 Box
1344 3831 Box
1366 1394 Box
1367 1401 Box
1368 1422 Box
1370 1456 Box
1372 1503 Box
1376 1565 Box
1381 1640 Box
1387 1731 Box
1394 1838 Box
1404 1965 Box
1415 2115 Box
1430 2294 Box
1448 2513 Box
1472 2788 Box
1504 3159 Box
1546 3748 Box
1540 1274 Box
1540 1282 Box
1542 1305 Box
1544 1343 Box
1547 1396 Box
1551 1463 Box
1556 1545 Box
1562 1642 Box
1571 1755 Box
1581 1888 Box
1594 2043 Box
1610 2227 Box
1630 2450 Box
1657 2728 Box
1691 3098 Box
1738 3670 Box
1706 1136 Box
1706 1145 Box
1707 1172 Box
1710 1216 Box
1713 1276 Box
1717 1351 Box
1723 1441 Box
1730 1546 Box
1739 1667 Box
1750 1807 Box
1764 1969 Box
1782 2159 Box
1804 2386 Box
1833 2667 Box
1871 3037 Box
1922 3596 Box
1865 964 Box
1865 976 Box
1867 1010 Box
1869 1065 Box
1873 1137 Box
1877 1225 Box
1883 1327 Box
1891 1443 Box
1901 1574 Box
1913 1722 Box
1928 1892 Box
1947 2088 Box
1971 2321 Box
2003 2606 Box
2044 2976 Box
2099 3524 Box
2018 705 Box
2019 727 Box
2020 785 Box
2023 868 Box
2027 966 Box
2032 1076 Box
2038 1197 Box
2047 1328 Box
2057 1472 Box
2070 1632 Box
2086 1811 Box
2107 2015 Box
2133 2254 Box
2167 2544 Box
2211 2916 Box
2271 3455 Box
2176 708 Box
2181 883 Box
2188 1041 Box
2197 1198 Box
2208 1361 Box
2222 1535 Box
2240 1726 Box
2262 1939 Box
2290 2185 Box
2326 2480 Box
2374 2855 Box
2438 3388 Box
2334 832 Box
2344 1043 Box
2356 1236 Box
2371 1430 Box
2389 1635 Box
2413 1860 Box
2443 2115 Box
2481 2416 Box
2532 2794 Box
2601 3321 Box
2487 835 Box
2500 1089 Box
2516 1314 Box
2535 1539 Box
2560 1777 Box
2592 2042 Box
2634 2351 Box
2688 2732 Box
2762 3257 Box
2866 4515 Box
2641 901 Box
2657 1181 Box
2679 1434 Box
2705 1690 Box
2739 1967 Box
2783 2284 Box
2841 2670 Box
2920 3192 Box
3031 4247 Box
2779 545 Box
2797 1021 Box
2819 1317 Box
2848 1597 Box
2884 1888 Box
2930 2215 Box
2992 2608 Box
3076 3129 Box
3195 4099 Box
2934 800 Box
2958 1185 Box
2988 1496 Box
3026 1806 Box
3076 2145 Box
3141 2544 Box
3231 3066 Box
3357 3981 Box
3095 1025 Box
3127 1387 Box
3167 1720 Box
3220 2073 Box
3290 2480 Box
3385 3003 Box
3520 3879 Box
3231 806 Box
3265 1264 Box
3308 1628 Box
3363 1998 Box
3437 2415 Box
3539 2940 Box
3683 3787 Box
3402 1121 Box
3447 1530 Box
3506 1920 Box
3585 2348 Box
3693 2878 Box
3848 3701 Box
3538 942 Box
3586 1423 Box
3649 1838 Box
3733 2280 Box
3848 2815 Box
4014 3621 Box
3674 654 Box
3726 1304 Box
3792 1753 Box
3881 2210 Box
4004 2752 Box
4183 3544 Box
3865 1168 Box
3936 1663 Box
4031 2138 Box
4163 2688 Box
4356 3469 Box
4006 1002 Box
4082 1566 Box
4183 2065 Box
4325 2624 Box
4533 3398 Box
4149 766 Box
4229 1461 Box
4338 1988 Box
4491 2559 Box
4718 3327 Box
4379 1346 Box
4496 1909 Box
4662 2493 Box
4912 3259 Box
4533 1215 Box
4660 1826 Box
4840 2426 Box
5118 3191 Box
4691 1060 Box
4829 1738 Box
5028 2358 Box
5342 3124 Box
4855 853 Box
5006 1645 Box
5229 2288 Box
5592 3057 Box
5195 1546 Box
5448 2217 Box
5889 2991 Box
5399 1438 Box
5695 2143 Box
6290 2925 Box
5625 1318 Box
5993 2068 Box
5889 1181 Box
6420 1989 Box
6231 1014 Box
6594 4487 Box
1.000 UL
LTb
714 420 M
6248 0 V
0 4200 V
-6248 0 V
714 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
