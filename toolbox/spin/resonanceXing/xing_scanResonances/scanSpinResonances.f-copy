! 1/ Creates an ensemble of zgoubi_xxx.dat files for Froissard-Stora resonance xing, saved in respective xxx directories. 
! Starting data is calcStrength.out (contains list of resonances and their strengths),
! as obtained from prior executing /mad/tools/spin/calcStrength/calcStrength. 
! A zgoubi_xxx.dat is then built executing /home/meot/zgoubi/struct/tools/spin/xing_geneZgDat/geneZGDat4Xing_fromCalcStrength
! 2/ Runs each zgoubi_xxx.dat in its own directory xxx. 
! 3/ executes various programs that compute resonance strengths from Sz vs. vs. turn# etc.
! 4/ Execute various gnuplot.cmd types of files that produce monitoring graphs, 
! 5/ Gather results from 3/ and 4/ into log.tex file

      implicit double precision (a-h,o-z)
      
      character radic*36, cmmnd*200, txtM*4, txtQz*15
      character txt132*132
      character zgDatFile(200)*50, drctry(200)*15
      integer debstr, finstr
      parameter(lunR=7,lunW=8,lunO=10,lunO2=12)

      call system('cp -f calcStrength.out scanSpinResonances.In')

      open(unit=lunR,file='scanSpinResonances.In')
      open(unit=lunO,file='scanSpinResonances.Out')
      open(unit=lunO2,file='scanSpinResonances.Out2')

      write(lunO2,fmt='(a)') 
     >   ' Data files created from calcStrength.out : '

      ifile = 1
 1    continue
        read(lunR,fmt='(a)',end=18,err=99) txt132
        open(unit=lunW,file='geneZGDat4Xing.In')
        write(lunW,*) txt132
        close(lunW)        

C Generate zgoubi.dat
        cmmnd = '/home/meot/zgoubi/struct/tools/spin/'//
     >   'xing_geneZgDat/geneZGDat4Xing_fromCalcStrength'
        call system(cmmnd)

        read(txt132,*) txtM, txtQz
        ltxtM = finstr(txtM) - debstr(txtM) +1
        ltxtQz = finstr(txtQz) - debstr(txtQz) +1

        drctry(ifile) = 'M'//txtM(debstr(txtM):debstr(txtM)+ltxtM-1)//
     >         'Qz'//txtQz(debstr(txtQz):debstr(txtQz)+ltxtQz-1)
        zgDatFile(ifile) = 'zgoubi_'
     >    //drctry(ifile)(debstr(drctry(ifile)):finstr(drctry(ifile)))
     >                           //'.dat'
        
        cmmnd = 'mkdir -p '//drctry(ifile)
        call system(cmmnd)
        cmmnd = 'cp -f zgoubi_geneZGDat4Xing-Out.dat '//
     >   zgDatFile(ifile)(
     >     debstr(zgDatFile(ifile)):finstr(zgDatFile(ifile)))
        call system(cmmnd)
        cmmnd = 'mv '//zgDatFile(ifile)//' '//drctry(ifile)
        call system(cmmnd)

        ifile = ifile+1        
        goto 1

 18   continue
      ifile = ifile -1
      write(*,*) 
      write(*,*) ' End of scanSpinResonances.In reached, ',
     > 'number of zgoubi.dat files created : ',ifile
      write(*,*) ' Names have been stored in scanSpinResonances.Out2'
      write(*,*) 

C Save dirctory and file names for further use of xing_dataTreatment etc.
      do i = 1, ifile
        write(lunO2,*) i,' ',drctry(i),' ',zgDatFile(i)
      enddo

C Run zgoubi_xxx.dat files
      do i = 1, ifile
        cmmnd = 'cd '//
     >  drctry(i)(
     >     debstr(drctry(i)):finstr(drctry(i)))
     >  //' ; '
     >  //'cp -f '//
     >  zgDatFile(i)(
     >     debstr(zgDatFile(i)):finstr(zgDatFile(i)))
     >  //'  zgoubi.dat'
        write(*,*) ' Execute : ',cmmnd
        call system(cmmnd)
        cmmnd = 'cd '//
     >  drctry(i)(
     >     debstr(drctry(i)):finstr(drctry(i)))
     >  //' ; ~/zgoubi/source/zgoubi < zgoubi.dat > echo &'
        write(*,*) ' Execute : ',cmmnd
        call system(cmmnd)
      enddo

      stop

 99   continue
      ierr = 1
      write(*,*) ' '
      write(*,*) ' *** error during read in data file'
      write(*,*) ' '
      stop
      end
      FUNCTION DEBSTR(STRING)
      implicit double precision (a-h,o-z)
      INTEGER DEBSTR
      CHARACTER * (*) STRING

C     --------------------------------------
C     RENVOIE DANS DEBSTR LE RANG DU
C     1-ER CHARACTER NON BLANC DE STRING,
C     OU BIEN 0 SI STRING EST VIDE ou BLANC.
C     --------------------------------------

      DEBSTR=0
      LENGTH=LEN(STRING)
C      LENGTH=LEN(STRING)+1
1     CONTINUE
        DEBSTR=DEBSTR+1
C        IF(DEBSTR .EQ. LENGTH) RETURN
C        IF (STRING(DEBSTR:DEBSTR) .EQ. ' ') GOTO 1
        IF (STRING(DEBSTR:DEBSTR) .EQ. ' ') THEN
          IF(DEBSTR .EQ. LENGTH) THEN
            DEBSTR = 0
            RETURN
          ELSE
            GOTO 1
          ENDIF
        ENDIF

      RETURN
      END
      FUNCTION FINSTR(STRING)
      implicit double precision (a-h,o-z)
      INTEGER FINSTR
      CHARACTER * (*) STRING
C     --------------------------------------
C     RENVOIE DANS FINSTR LE RANG DU
C     DERNIER CHARACTER NON BLANC DE STRING,
C     OU BIEN 0 SI STRING EST VIDE ou BLANC.
C     --------------------------------------

      FINSTR=LEN(STRING)+1
1     CONTINUE
        FINSTR=FINSTR-1
        IF(FINSTR .EQ. 0) RETURN
        IF (STRING(FINSTR:FINSTR) .EQ. ' ') GOTO 1

      RETURN
      END

