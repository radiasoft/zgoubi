%!PS-Adobe-2.0 EPSF-2.0
%%Title: gnuplot_fresnelIntModel.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Sun Sep  5 11:44:52 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 285 163
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (gnuplot_fresnelIntModel.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (meot,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Sep  5 11:44:52 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(helvetica) findfont 140 scalefont setfont
/helvetica findfont 140 scalefont setfont
1.000 UL
LTb
882 420 M
63 0 V
3521 0 R
-63 0 V
stroke
798 420 M
[ [(roman) 140.0 0.0 true true 0 ( 0.984)]
] -46.7 MRshow
1.000 UL
LTb
882 630 M
63 0 V
3521 0 R
-63 0 V
stroke
798 630 M
[ [(roman) 140.0 0.0 true true 0 ( 0.986)]
] -46.7 MRshow
1.000 UL
LTb
882 840 M
63 0 V
3521 0 R
-63 0 V
stroke
798 840 M
[ [(roman) 140.0 0.0 true true 0 ( 0.988)]
] -46.7 MRshow
1.000 UL
LTb
882 1049 M
63 0 V
3521 0 R
-63 0 V
stroke
798 1049 M
[ [(roman) 140.0 0.0 true true 0 ( 0.99)]
] -46.7 MRshow
1.000 UL
LTb
882 1259 M
63 0 V
3521 0 R
-63 0 V
stroke
798 1259 M
[ [(roman) 140.0 0.0 true true 0 ( 0.992)]
] -46.7 MRshow
1.000 UL
LTb
882 1469 M
63 0 V
3521 0 R
-63 0 V
stroke
798 1469 M
[ [(roman) 140.0 0.0 true true 0 ( 0.994)]
] -46.7 MRshow
1.000 UL
LTb
882 1679 M
63 0 V
3521 0 R
-63 0 V
stroke
798 1679 M
[ [(roman) 140.0 0.0 true true 0 ( 0.996)]
] -46.7 MRshow
1.000 UL
LTb
882 1888 M
63 0 V
3521 0 R
-63 0 V
stroke
798 1888 M
[ [(roman) 140.0 0.0 true true 0 ( 0.998)]
] -46.7 MRshow
1.000 UL
LTb
882 2098 M
63 0 V
3521 0 R
-63 0 V
stroke
798 2098 M
[ [(roman) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
882 420 M
0 63 V
0 1615 R
0 -63 V
stroke
882 280 M
[ [(roman) 80.0 0.0 true true 0 ( 1350)]
] -26.7 MCshow
1.000 UL
LTb
1330 420 M
0 63 V
0 1615 R
0 -63 V
stroke
1330 280 M
[ [(roman) 80.0 0.0 true true 0 ( 1351)]
] -26.7 MCshow
1.000 UL
LTb
1778 420 M
0 63 V
0 1615 R
0 -63 V
stroke
1778 280 M
[ [(roman) 80.0 0.0 true true 0 ( 1352)]
] -26.7 MCshow
1.000 UL
LTb
2226 420 M
0 63 V
0 1615 R
0 -63 V
stroke
2226 280 M
[ [(roman) 80.0 0.0 true true 0 ( 1353)]
] -26.7 MCshow
1.000 UL
LTb
2674 420 M
0 63 V
0 1615 R
0 -63 V
stroke
2674 280 M
[ [(roman) 80.0 0.0 true true 0 ( 1354)]
] -26.7 MCshow
1.000 UL
LTb
3122 420 M
0 63 V
0 1615 R
0 -63 V
stroke
3122 280 M
[ [(roman) 80.0 0.0 true true 0 ( 1355)]
] -26.7 MCshow
1.000 UL
LTb
3570 420 M
0 63 V
0 1615 R
0 -63 V
stroke
3570 280 M
[ [(roman) 80.0 0.0 true true 0 ( 1356)]
] -26.7 MCshow
1.000 UL
LTb
4018 420 M
0 63 V
0 1615 R
0 -63 V
stroke
4018 280 M
[ [(roman) 80.0 0.0 true true 0 ( 1357)]
] -26.7 MCshow
1.000 UL
LTb
4466 420 M
0 63 V
0 1615 R
0 -63 V
stroke
4466 280 M
[ [(roman) 80.0 0.0 true true 0 ( 1358)]
] -26.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
882 2098 N
882 420 L
3584 0 V
0 1678 V
-3584 0 V
Z stroke
LCb setrgbcolor
140 1259 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(roman) 250.0 0.0 true true 0 (Sz)]
] -83.3 MCshow
grestore
LTb
LCb setrgbcolor
2674 70 M
[ [(roman) 250.0 0.0 true true 0 (kin-E \(MeV\))]
] -83.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/helvetica findfont 140 scalefont setfont
LTb
3815 1965 M
('fort.88'  us \($1\):\($2\)) Rshow
LT0
973 2094 Pls
986 2094 Pls
998 2094 Pls
1011 2094 Pls
1024 2094 Pls
1036 2094 Pls
1049 2094 Pls
1061 2094 Pls
1074 2094 Pls
1087 2094 Pls
1099 2094 Pls
1112 2094 Pls
1124 2094 Pls
1137 2093 Pls
1149 2093 Pls
1162 2093 Pls
1175 2093 Pls
1187 2093 Pls
1200 2093 Pls
1212 2093 Pls
1225 2093 Pls
1238 2093 Pls
1250 2093 Pls
1263 2092 Pls
1275 2092 Pls
1288 2092 Pls
1301 2092 Pls
1313 2092 Pls
1326 2092 Pls
1338 2092 Pls
1351 2092 Pls
1364 2091 Pls
1376 2091 Pls
1389 2091 Pls
1401 2091 Pls
1414 2091 Pls
1426 2091 Pls
1439 2091 Pls
1452 2090 Pls
1464 2090 Pls
1477 2090 Pls
1489 2090 Pls
1502 2090 Pls
1515 2089 Pls
1527 2089 Pls
1540 2089 Pls
1552 2089 Pls
1565 2088 Pls
1578 2088 Pls
1590 2088 Pls
1603 2088 Pls
1615 2087 Pls
1628 2087 Pls
1640 2087 Pls
1653 2086 Pls
1666 2086 Pls
1678 2086 Pls
1691 2085 Pls
1703 2085 Pls
1716 2084 Pls
1729 2084 Pls
1741 2083 Pls
1754 2083 Pls
1766 2083 Pls
1779 2082 Pls
1792 2081 Pls
1804 2081 Pls
1817 2080 Pls
1829 2080 Pls
1842 2079 Pls
1854 2078 Pls
1867 2077 Pls
1880 2077 Pls
1892 2076 Pls
1905 2075 Pls
1917 2074 Pls
1930 2073 Pls
1943 2072 Pls
1955 2071 Pls
1968 2070 Pls
1980 2069 Pls
1993 2067 Pls
2006 2066 Pls
2018 2065 Pls
2031 2063 Pls
2043 2061 Pls
2056 2060 Pls
2068 2058 Pls
2081 2056 Pls
2094 2054 Pls
2106 2051 Pls
2119 2049 Pls
2131 2047 Pls
2144 2044 Pls
2157 2041 Pls
2169 2038 Pls
2182 2034 Pls
2194 2031 Pls
2207 2027 Pls
2220 2023 Pls
2232 2019 Pls
2245 2014 Pls
2257 2009 Pls
2270 2004 Pls
2282 1998 Pls
2295 1992 Pls
2308 1985 Pls
2320 1978 Pls
2333 1970 Pls
2345 1962 Pls
2358 1953 Pls
2371 1944 Pls
2383 1934 Pls
2396 1923 Pls
2408 1911 Pls
2421 1899 Pls
2434 1885 Pls
2446 1871 Pls
2459 1856 Pls
2471 1839 Pls
2484 1822 Pls
2485 1820 Pls
2498 1801 Pls
2510 1781 Pls
2523 1759 Pls
2535 1737 Pls
2548 1712 Pls
2561 1687 Pls
2573 1659 Pls
2586 1630 Pls
2598 1600 Pls
2611 1568 Pls
2624 1534 Pls
2636 1498 Pls
2649 1461 Pls
2661 1423 Pls
2674 1382 Pls
2687 1341 Pls
2699 1297 Pls
2712 1253 Pls
2724 1207 Pls
2737 1161 Pls
2749 1114 Pls
2762 1066 Pls
2775 1019 Pls
2787 971 Pls
2800 924 Pls
2812 878 Pls
2825 834 Pls
2838 791 Pls
2850 750 Pls
2863 713 Pls
2875 679 Pls
2888 649 Pls
2901 623 Pls
2913 602 Pls
2926 587 Pls
2938 577 Pls
2951 574 Pls
2963 577 Pls
2976 586 Pls
2989 602 Pls
3001 625 Pls
3014 654 Pls
3026 688 Pls
3039 728 Pls
3052 773 Pls
3064 821 Pls
3077 872 Pls
3089 924 Pls
3102 977 Pls
3115 1028 Pls
3127 1076 Pls
3140 1120 Pls
3152 1159 Pls
3165 1191 Pls
3177 1215 Pls
3190 1230 Pls
3203 1235 Pls
3215 1231 Pls
3228 1216 Pls
3240 1192 Pls
3253 1160 Pls
3266 1119 Pls
3278 1074 Pls
3291 1024 Pls
3303 973 Pls
3316 922 Pls
3329 875 Pls
3341 834 Pls
3354 801 Pls
3366 778 Pls
3379 767 Pls
3391 767 Pls
3404 780 Pls
3417 805 Pls
3429 841 Pls
3442 885 Pls
3454 934 Pls
3467 986 Pls
3480 1036 Pls
3492 1082 Pls
3505 1120 Pls
3517 1147 Pls
3530 1161 Pls
3543 1161 Pls
3555 1146 Pls
3568 1118 Pls
3580 1079 Pls
3593 1032 Pls
3606 981 Pls
3618 931 Pls
3631 885 Pls
3643 850 Pls
3656 827 Pls
3668 820 Pls
3681 829 Pls
3694 853 Pls
3706 891 Pls
3719 938 Pls
3731 989 Pls
3744 1039 Pls
3757 1083 Pls
3769 1114 Pls
3782 1129 Pls
3794 1128 Pls
3807 1108 Pls
3820 1073 Pls
3832 1027 Pls
3845 976 Pls
3857 927 Pls
3870 885 Pls
3882 857 Pls
3895 847 Pls
3908 857 Pls
3920 884 Pls
3933 926 Pls
3945 976 Pls
3958 1027 Pls
3971 1071 Pls
3983 1101 Pls
3996 1112 Pls
4008 1102 Pls
4021 1074 Pls
4034 1030 Pls
4046 980 Pls
4059 930 Pls
4071 891 Pls
4084 868 Pls
4096 867 Pls
4109 887 Pls
4122 926 Pls
4134 975 Pls
4147 1026 Pls
4159 1068 Pls
4172 1094 Pls
4185 1097 Pls
4197 1078 Pls
4210 1040 Pls
4222 990 Pls
4235 941 Pls
4098 1965 Pls
1.000 UL
LTb
882 2098 N
882 420 L
3584 0 V
0 1678 V
-3584 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: roman helvetica
